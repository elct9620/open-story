# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-mocks` gem.
# Please instead update this file by running `bin/tapioca gem rspec-mocks`.

# Share the top-level RSpec namespace, because we are a core supported
# extension.
module RSpec
  extend ::RSpec::Support::Warnings
  extend ::RSpec::Core::Warnings

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

class RSpec::CallerFilter
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/caller_filter.rb#47
    def first_non_rspec_line(skip_frames = T.unsafe(nil), increment = T.unsafe(nil)); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/caller_filter.rb#18
RSpec::CallerFilter::ADDITIONAL_TOP_LEVEL_FILES = T.let(T.unsafe(nil), Array)

# source://rspec-support/3.12.0/lib/rspec/support/caller_filter.rb#28
RSpec::CallerFilter::IGNORE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-support/3.12.0/lib/rspec/support/caller_filter.rb#20
RSpec::CallerFilter::LIB_REGEX = T.let(T.unsafe(nil), Regexp)

# source://rspec-support/3.12.0/lib/rspec/support/caller_filter.rb#9
RSpec::CallerFilter::RSPEC_LIBS = T.let(T.unsafe(nil), Array)

module RSpec::Core
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core.rb#181
    def path_to_executable; end
  end
end

class RSpec::Core::AnonymousExampleGroup < ::RSpec::Core::ExampleGroup
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#776
    def metadata; end
  end
end

class RSpec::Core::BacktraceFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#8
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#49
  def backtrace_line(line); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#53
  def exclude?(line); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#6
  def exclusion_patterns; end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#6
  def exclusion_patterns=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#28
  def filter_gem(gem_name); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#33
  def format_backtrace(backtrace, options = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#22
  def full_backtrace=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#24
  def full_backtrace?; end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#6
  def inclusion_patterns; end

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#6
  def inclusion_patterns=(_arg0); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/backtrace_formatter.rb#60
  def matches?(patterns, line); end
end

module RSpec::Core::Bisect; end

class RSpec::Core::Bisect::BisectFailedError < ::StandardError
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#9
    def for_failed_spec_run(spec_output); end
  end
end

class RSpec::Core::Bisect::Channel
  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#41
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#62
  def close; end

  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#56
  def receive; end

  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#50
  def send(message); end
end

# source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#38
RSpec::Core::Bisect::Channel::MARSHAL_DUMP_ENCODING = T.let(T.unsafe(nil), Encoding)

class RSpec::Core::Bisect::ExampleSetDescriptor < ::Struct
  def all_example_ids; end
  def all_example_ids=(_); end
  def failed_example_ids; end
  def failed_example_ids=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Bisect::Notifier
  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#20
  def initialize(formatter); end

  # source://rspec-core/3.12.0/lib/rspec/core/bisect/utilities.rb#24
  def publish(event, *args); end
end

class RSpec::Core::Configuration
  include ::RSpec::Core::Hooks
  include ::RSpec::Core::Configuration::Readers

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#509
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#975
  def add_formatter(formatter, output = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#638
  def add_setting(name, opts = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2004
  def after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1188
  def alias_example_group_to(new_name, *args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1156
  def alias_example_to(name, *args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1219
  def alias_it_behaves_like_to(new_name, report_label = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1219
  def alias_it_should_behave_like_to(new_name, report_label = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2034
  def append_after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1949
  def append_before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1914
  def apply_derived_metadata_to(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2052
  def around(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#676
  def backtrace_exclusion_patterns; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#682
  def backtrace_exclusion_patterns=(patterns); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#503
  def backtrace_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#695
  def backtrace_inclusion_patterns; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#701
  def backtrace_inclusion_patterns=(patterns); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1949
  def before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#480
  def bisect_runner; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#481
  def bisect_runner=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2098
  def bisect_runner_class; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#901
  def color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#939
  def color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#922
  def color_enabled?(output = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#914
  def color_mode; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#932
  def color_mode=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1556
  def configure_example(example, example_hooks); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1596
  def configure_expectation_framework; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1544
  def configure_group(group); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1590
  def configure_mock_framework; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def default_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def default_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def default_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#982
  def default_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#993
  def default_formatter=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def default_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#121
  def default_path=(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def default_path?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1873
  def define_derived_metadata(*filters, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def deprecation_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#168
  def deprecation_stream=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def detail_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def detail_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def detail_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1854
  def disable_monkey_patching; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1846
  def disable_monkey_patching!; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1854
  def disable_monkey_patching=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def drb; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def drb=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def drb?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def drb_port; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def drb_port=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def drb_port?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def dry_run; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def dry_run=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def dry_run?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def error_exit_code; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def error_exit_code=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def error_exit_code?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def error_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def error_stream=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def error_stream?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def example_status_persistence_file_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#192
  def example_status_persistence_file_path=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def exclude_pattern; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#304
  def exclude_pattern=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1348
  def exclusion_filter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1341
  def exclusion_filter=(filter); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#837
  def expect_with(*frameworks); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#810
  def expectation_framework=(framework); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#798
  def expectation_frameworks; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1784
  def expose_current_running_example_as(method_name); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#151
  def expose_dsl_globally=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#143
  def expose_dsl_globally?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1494
  def extend(mod, *filters); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def fail_fast; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#214
  def fail_fast=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def fail_if_no_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def fail_if_no_examples=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def fail_if_no_examples?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def failure_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def failure_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def failure_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def failure_exit_code; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def failure_exit_code=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def failure_exit_code?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1062
  def files_or_directories_to_run=(*files); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1075
  def files_to_run; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#497
  def files_to_run=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1292
  def filter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1283
  def filter=(filter); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#721
  def filter_gems_from_backtrace(*gem_names); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#499
  def filter_manager; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#499
  def filter_manager=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1254
  def filter_run(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1328
  def filter_run_excluding(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1254
  def filter_run_including(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1270
  def filter_run_when_matching(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def fixed_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def fixed_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def fixed_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#571
  def force(hash); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1635
  def format_docstrings(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1640
  def format_docstrings_block; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#975
  def formatter=(formatter, output = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1008
  def formatter_loader; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1003
  def formatters; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#887
  def full_backtrace=(true_or_false); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#881
  def full_backtrace?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#956
  def full_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#951
  def full_description=(description); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2082
  def hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1581
  def in_project_source_dir_regex; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1404
  def include(mod, *filters); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1451
  def include_context(shared_group_name, *filters); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1292
  def inclusion_filter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1283
  def inclusion_filter=(filter); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1080
  def last_run_statuses; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def libs; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#942
  def libs=(libs); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1604
  def load_spec_files; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#503
  def loaded_spec_files; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def max_displayed_failure_line_count; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def max_displayed_failure_line_count=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def max_displayed_failure_line_count?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#648
  def mock_framework; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#660
  def mock_framework=(framework); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#765
  def mock_with(framework); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2087
  def on_example_group_definition(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2093
  def on_example_group_definition_callbacks; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def only_failures; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def only_failures?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#203
  def only_failures_but_not_configured?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def order=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#503
  def ordering_manager; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def ordering_registry(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def output_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#274
  def output_stream=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def pattern; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#293
  def pattern=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def pending_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def pending_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def pending_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1533
  def prepend(mod, *filters); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2004
  def prepend_after(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1979
  def prepend_before(scope = T.unsafe(nil), *meta, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1052
  def profile_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#322
  def profile_examples=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def profile_examples?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def project_source_dirs; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def project_source_dirs=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def project_source_dirs?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1806
  def raise_errors_for_deprecations!; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1754
  def raise_on_warning=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def register_ordering(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1035
  def reporter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def requires; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1573
  def requires=(paths); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#580
  def reset; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#593
  def reset_filters; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#586
  def reset_reporter; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def run_all_when_everything_filtered; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def run_all_when_everything_filtered=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def run_all_when_everything_filtered?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def seed(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def seed=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1647
  def seed_used?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def shared_context_metadata_behavior; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#434
  def shared_context_metadata_behavior=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def silence_filter_announcements; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def silence_filter_announcements=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def silence_filter_announcements?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1117
  def spec_files_with_failures; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def start_time; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def start_time=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def start_time?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#501
  def static_config_filter_manager; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#501
  def static_config_filter_manager=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def success_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def success_color=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def success_color?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def threadsafe; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def threadsafe=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def threadsafe?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#383
  def treat_symbols_as_metadata_keys_with_true_values=(_value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#66
  def tty; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#89
  def tty=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#78
  def tty?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1734
  def warnings=(value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1739
  def warnings?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1896
  def when_first_matching_example_defined(*filters); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2064
  def with_suite_hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#499
  def world; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#499
  def world=(_arg0); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2220
  def absolute_pattern?(pattern); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2321
  def add_hook_to_existing_matching_groups(meta, scope, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2260
  def assert_no_example_groups_defined(config_option); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2310
  def clear_values_derived_from_example_status_persistence_file_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2242
  def command; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2286
  def conditionally_disable_expectations_monkey_patching; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2277
  def conditionally_disable_mocks_monkey_patching; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2315
  def configure_group_with(group, module_list, application_method); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2250
  def define_built_in_hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2373
  def define_mixed_in_module(mod, filters, mod_list, config_method, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2225
  def extract_location(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2202
  def file_glob_from(path, pattern); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2191
  def gather_directories(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2170
  def get_files_to_run(paths); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2197
  def get_matching_files(path, pattern); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2137
  def handle_suite_hook(scope, meta); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2116
  def load_file_handling_errors(method, file); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2343
  def metadata_applies_to_group?(meta, group); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2335
  def on_existing_matching_groups(meta); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2273
  def output_to_tty?(output = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2269
  def output_wrapper; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2182
  def paths_to_check(paths); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2187
  def pattern_might_load_specs_from_vendored_dirs?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2296
  def rspec_expectations_loaded?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2292
  def rspec_mocks_loaded?; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2152
  def run_suite_hooks(hook_description, hooks); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2358
  def safe_extend(mod, host); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2354
  def safe_include(mod, host); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2348
  def safe_prepend(mod, host); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2300
  def update_pattern_attr(name, value); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#2246
  def value_for(key); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#100
    def add_read_only_setting(name, opts = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#87
    def add_setting(name, opts = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#70
    def define_alias(name, alias_name); end

    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#77
    def define_predicate(name); end

    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#60
    def define_reader(name); end

    # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1645
    def delegate_to_ordering_manager(*methods); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1625
RSpec::Core::Configuration::DEFAULT_FORMATTER = T.let(T.unsafe(nil), Proc)

class RSpec::Core::Configuration::DeprecationReporterBuffer
  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1019
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1023
  def deprecation(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1027
  def play_onto(reporter); end
end

module RSpec::Core::Configuration::ExposeCurrentExample; end

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1105
RSpec::Core::Configuration::FAILED_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#728
RSpec::Core::Configuration::MOCKING_ADAPTERS = T.let(T.unsafe(nil), Hash)

class RSpec::Core::Configuration::MustBeConfiguredBeforeExampleGroupsError < ::StandardError; end

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1108
RSpec::Core::Configuration::PASSED_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1111
RSpec::Core::Configuration::PENDING_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1744
RSpec::Core::Configuration::RAISE_ERROR_WARNING_NOTIFIER = T.let(T.unsafe(nil), Proc)

module RSpec::Core::Configuration::Readers
  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def default_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def default_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def deprecation_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def detail_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def drb; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def drb_port; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def dry_run; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def error_exit_code; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def error_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def example_status_persistence_file_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def exclude_pattern; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def fail_fast; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def fail_if_no_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def failure_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def failure_exit_code; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def fixed_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def libs; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def max_displayed_failure_line_count; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def only_failures; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def output_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def pattern; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def pending_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def project_source_dirs; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def requires; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def run_all_when_everything_filtered; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def shared_context_metadata_behavior; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def silence_filter_announcements; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def start_time; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def success_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def threadsafe; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#63
  def tty; end
end

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1102
RSpec::Core::Configuration::UNKNOWN_STATUS = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/configuration.rb#1114
RSpec::Core::Configuration::VALID_STATUSES = T.let(T.unsafe(nil), Array)

class RSpec::Core::ConfigurationOptions
  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#12
  def initialize(args); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#40
  def args; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#21
  def configure(config); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#30
  def configure_filter_manager(filter_manager); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#37
  def options; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#169
  def args_from_options_file(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#138
  def command_line_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#142
  def custom_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#183
  def custom_options_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#129
  def env_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#121
  def file_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#66
  def force?(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#154
  def global_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#195
  def global_options_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#206
  def home_options_file_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#117
  def load_formatters_into(config); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#146
  def local_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#191
  def local_options_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#175
  def options_file_as_erb_string(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#158
  def options_from(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#70
  def order(keys); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#44
  def organize_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#163
  def parse_args_ignoring_files_or_dirs_to_run(args, source); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#109
  def process_options_into(config); end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#150
  def project_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#187
  def project_options_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#222
  def resolve_xdg_config_home; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#199
  def xdg_options_file_if_exists; end

  # source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#215
  def xdg_options_file_path; end
end

# source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#77
RSpec::Core::ConfigurationOptions::OPTIONS_ORDER = T.let(T.unsafe(nil), Array)

# source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#59
RSpec::Core::ConfigurationOptions::UNFORCED_OPTIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

# source://rspec-core/3.12.0/lib/rspec/core/configuration_options.rb#64
RSpec::Core::ConfigurationOptions::UNPROCESSABLE_OPTIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

module RSpec::Core::DSL
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#89
    def change_global_dsl(&changes); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#27
    def example_group_aliases; end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#37
    def expose_example_group_alias(name); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#81
    def expose_example_group_alias_globally(method_name); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#58
    def expose_globally!; end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#32
    def exposed_globally?; end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#70
    def remove_globally!; end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#53
    def top_level; end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#53
    def top_level=(_arg0); end
  end
end

class RSpec::Core::DeprecationError < ::StandardError; end

class RSpec::Core::DidYouMean
  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#8
  def initialize(relative_file_name); end

  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#14
  def call; end

  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#6
  def relative_file_name; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#30
  def formats(probables); end

  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#40
  def red_font(mytext); end

  # source://rspec-core/3.12.0/lib/rspec/core/did_you_mean.rb#35
  def top_and_tail(rspec_format); end
end

class RSpec::Core::Example
  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#186
  def initialize(example_group_class, description, user_metadata, example_block = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#174
  def clock; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#174
  def clock=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#76
  def description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#388
  def display_exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#396
  def display_exception=(ex); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#132
  def duplicate_with(metadata_overrides = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#230
  def example_group; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#170
  def example_group_instance; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#158
  def exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def execution_result; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#439
  def fail_with_exception(reporter, exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def file_path; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def full_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#117
  def id; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#220
  def inspect; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#87
  def inspect_output; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#456
  def instance_exec(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def location; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#96
  def location_rerun_argument; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#163
  def metadata; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def pending; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#234
  def pending?; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#226
  def reporter; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#111
  def rerun_argument; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#246
  def run(example_group_instance, reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#425
  def set_aggregate_failures_exception(exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#412
  def set_exception(exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#49
  def skip; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#449
  def skip_with_exception(reporter, exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#238
  def skipped?; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#220
  def to_s; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#148
  def update_inherited_metadata(updates); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#534
  def assign_generated_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#478
  def finish(reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#543
  def generate_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#462
  def hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#550
  def location_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#530
  def mocks_need_verification?; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#498
  def record_finished(status, reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#516
  def run_after_example; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#503
  def run_before_example; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#473
  def start(reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#524
  def verify_mocks; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#508
  def with_around_and_singleton_context_hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#466
  def with_around_example_hooks; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example.rb#48
    def delegate_to_metadata(key); end

    # source://rspec-core/3.12.0/lib/rspec/core/example.rb#122
    def parse_id(id); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/example.rb#310
RSpec::Core::Example::AllExceptionsExcludingDangerousOnesOnRubiesThatAllowIt = RSpec::Support::AllExceptionsExceptOnesWeMustNotRescue

class RSpec::Core::Example::ExecutionResult
  include ::RSpec::Core::HashImitatable
  extend ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#610
  def ensure_timing_set(clock); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#597
  def example_skipped?; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def exception=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def finished_at; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def finished_at=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_exception=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_fixed; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_fixed=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#588
  def pending_fixed?; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_message; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def pending_message=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#603
  def record_finished(status, finished_at); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def run_time; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def run_time=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def started_at; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def started_at=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def status; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#442
  def status=(_arg0); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#616
  def calculate_run_time(finished_at); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#634
  def get_value(name); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#623
  def hash_for_delegation; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#642
  def issue_deprecation(_method_name, *_args); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#629
  def set_value(name, value); end
end

class RSpec::Core::Example::Procsy
  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#362
  def initialize(example, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def <<(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def ==(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def ===(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def >>(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def [](*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def arity(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def binding(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#350
  def call(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def clock(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def clock=(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def clone(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def curry(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def description(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def dup(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def duplicate_with(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def eql?(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#333
  def example; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def example_group(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def example_group_instance(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def exception(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#374
  def executed?; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def execution_result(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def file_path(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def full_description(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def hash(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def id(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#379
  def inspect; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def inspect_output(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def lambda?(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def location(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def location_rerun_argument(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def metadata(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def parameters(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def pending(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def pending?(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def reporter(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def rerun_argument(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def ruby2_keywords(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#350
  def run(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def skip(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def skipped?(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def source_location(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#358
  def to_proc; end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#339
  def update_inherited_metadata(*a, &b); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#369
  def wrap(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#346
  def yield(*a, &b); end
end

class RSpec::Core::ExampleGroup
  include ::RSpec::Core::MemoizedHelpers
  include ::RSpec::Core::Pending
  extend ::RSpec::Core::Hooks
  extend ::RSpec::Core::MemoizedHelpers::ClassMethods
  extend ::RSpec::Core::SharedExampleGroup

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#707
  def initialize(inspect_output = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#99
  def described_class; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#713
  def inspect; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#758
  def method_missing(name, *args, **_arg2); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#367
    def add_example(example); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#529
    def before_context_ivars; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#466
    def children; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def context(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#542
    def currently_executing_a_context_hook?; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#667
    def declaration_locations; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#246
    def define_example_group_method(name, metadata = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#145
    def define_example_method(name, extra_options = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#317
    def define_nested_shared_group_method(new_name, report_label = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#76
    def delegate_to_metadata(*names); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#460
    def descendant_filtered_examples; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#503
    def descendants; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#78
    def described_class; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#85
    def description; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#700
    def each_instance_variable_for_example(group); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#518
    def ensure_example_groups_are_configured; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def example(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#450
    def examples; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def fexample(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#78
    def file_path; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#455
    def filtered_examples; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#379
    def find_and_eval_shared(label, name, inclusion_location, *args, &customization_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def fit(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def focus(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#655
    def for_filtered_examples(reporter, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def fspecify(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#675
    def id; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#40
    def idempotently_define_singleton_method(name, &definition); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#343
    def include_context(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#353
    def include_examples(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def it(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#318
    def it_behaves_like(name, *args, &customization_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#318
    def it_should_behave_like(name, *args, &customization_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#78
    def location; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#51
    def metadata; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#485
    def next_runnable_index_for(file); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#625
    def ordering_strategy; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#508
    def parent_groups; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def pending(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#373
    def remove_example(example); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#359
    def reset_memoized; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#599
    def run(reporter = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#585
    def run_after_context_hooks(example_group_instance); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#547
    def run_before_context_hooks(example_group_instance); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#641
    def run_examples(reporter); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#410
    def set_it_up(description, args, registration_collection, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#685
    def set_ivars(instance, ivars); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def skip(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def specify(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#534
    def store_before_context_ivars(example_group_instance); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#395
    def subclass(parent, description, args, registration_collection, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#562
    def superclass_before_context_ivars; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#71
    def superclass_metadata; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#513
    def top_level?; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#680
    def top_level_description; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#476
    def traverse_tree_until(&block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#727
    def update_inherited_metadata(updates); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#61
    def with_replaced_metadata(meta); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#247
    def xdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def xexample(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def xit(*all_args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#146
    def xspecify(*all_args, &block); end

    private

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#742
    def method_missing(name, *args); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#696
RSpec::Core::ExampleGroup::INSTANCE_VARIABLE_TO_IGNORE = T.let(T.unsafe(nil), Symbol)

class RSpec::Core::ExampleGroup::WrongScopeError < ::NoMethodError; end

class RSpec::Core::ExampleStatusDumper
  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#148
  def initialize(examples); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#152
  def dump; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#188
  def column_widths; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#159
  def formatted_header_rows; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#176
  def formatted_row_from(row_values); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#166
  def formatted_value_rows; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#184
  def headers; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#172
  def rows; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#144
    def dump(examples); end
  end
end

class RSpec::Core::ExampleStatusMerger
  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#79
  def initialize(this_run, from_previous_runs); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#85
  def merge; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#102
  def delete_previous_examples_that_no_longer_exist; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#108
  def example_must_no_longer_exist?(ex_id); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#95
  def hash_from(example_list); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#124
  def loaded_spec_files; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#132
  def sort_value_from(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#128
  def spec_file_from(ex_id); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#75
    def merge(this_run, from_previous_runs); end
  end
end

class RSpec::Core::ExampleStatusParser
  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#212
  def initialize(string); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#216
  def parse; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#226
  def headers; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#222
  def parse_row(line); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#230
  def split_line(line); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#208
    def parse(string); end
  end
end

class RSpec::Core::ExampleStatusPersister
  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#18
  def initialize(examples, file_name); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#23
  def persist; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#40
  def dump_statuses(unparsed_previous_runs); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#46
  def statuses_from_this_run; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#9
    def load_from(file_name); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_status_persister.rb#14
    def persist(examples, file_name); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#183
RSpec::Core::ExclusionRules = RSpec::Core::FilterRules

class RSpec::Core::FilterManager
  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#7
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#22
  def add_ids(rerun_path, scoped_ids); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#15
  def add_location(file_path, line_numbers); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#30
  def empty?; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#57
  def exclude(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#61
  def exclude_only(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#65
  def exclude_with_low_priority(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#5
  def exclusions; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#69
  def include(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#73
  def include_only(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#77
  def include_with_low_priority(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#5
  def inclusions; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#34
  def prune(examples); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#83
  def add_path_to_arrays_filter(filter_key, path, values); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#101
  def file_scoped_include?(ex_metadata, ids, locations); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#89
  def prune_conditionally_filtered_examples(examples); end
end

class RSpec::Core::FilterRules
  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#130
  def initialize(rules = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#161
  def [](key); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#134
  def add(updated); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#138
  def add_with_low_priority(updated); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#149
  def clear; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#153
  def delete(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#173
  def description; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#169
  def each_pair(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#165
  def empty?; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#157
  def fetch(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#177
  def include_example?(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#119
  def opposite; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#119
  def opposite=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#120
  def rules; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#144
  def use_only(updated); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#122
    def build; end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#116
RSpec::Core::FilterRules::PROC_HEX_NUMBER = T.let(T.unsafe(nil), Regexp)

# source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#117
RSpec::Core::FilterRules::PROJECT_DIR = T.let(T.unsafe(nil), String)

module RSpec::Core::FilterableItemRepository; end

class RSpec::Core::FilterableItemRepository::QueryOptimized < ::RSpec::Core::FilterableItemRepository::UpdateOptimized
  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#155
  def initialize(applies_predicate); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#164
  def append(item, metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#174
  def delete(item, metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#179
  def items_for(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#169
  def prepend(item, metadata); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#217
  def applicable_metadata_from(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#118
  def find_items_for(request_meta); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#211
  def handle_mutation(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#235
  def proc_keys_from(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#203
  def reconstruct_caches; end
end

class RSpec::Core::FilterableItemRepository::UpdateOptimized
  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#101
  def initialize(applies_predicate); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#106
  def append(item, metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#114
  def delete(item, metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#99
  def items_and_filters; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#118
  def items_for(request_meta); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#110
  def prepend(item, metadata); end
end

module RSpec::Core::FlatMap
  private

  # source://rspec-core/3.12.0/lib/rspec/core/flat_map.rb#6
  def flat_map(array, &block); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/flat_map.rb#6
    def flat_map(array, &block); end
  end
end

module RSpec::Core::Formatters
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#86
    def register(formatter_class, *notifications); end
  end
end

class RSpec::Core::Formatters::BaseBisectFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_bisect_formatter.rb#17
  def initialize(expected_failures); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_bisect_formatter.rb#23
  def example_failed(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_bisect_formatter.rb#27
  def example_finished(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_bisect_formatter.rb#37
  def start_dump(_notification); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_bisect_formatter.rb#13
    def inherited(formatter); end
  end
end

class RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#23
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#50
  def close(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#17
  def example_group; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#17
  def example_group=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#42
  def example_group_started(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#18
  def output; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#32
  def start(notification); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#64
  def output_supports_sync; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#60
  def restore_sync_output; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_formatter.rb#56
  def start_sync_output; end
end

class RSpec::Core::Formatters::BaseTextFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#65
  def close(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#30
  def dump_failures(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#47
  def dump_pending(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#42
  def dump_summary(summary); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#21
  def message(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/base_text_formatter.rb#53
  def seed(notification); end
end

class RSpec::Core::Formatters::BisectDRbFormatter < ::RSpec::Core::Formatters::BaseBisectFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/bisect_drb_formatter.rb#16
  def initialize(_output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/bisect_drb_formatter.rb#23
  def notify_results(results); end
end

module RSpec::Core::Formatters::ConsoleCodes
  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#34
  def config_colors_to_methods; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#47
  def console_code_for(code_or_symbol); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#66
  def wrap(text, code_or_symbol); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#34
    def config_colors_to_methods; end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#47
    def console_code_for(code_or_symbol); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#66
    def wrap(text, code_or_symbol); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#8
RSpec::Core::Formatters::ConsoleCodes::VT100_CODES = T.let(T.unsafe(nil), Hash)

# source://rspec-core/3.12.0/lib/rspec/core/formatters/console_codes.rb#29
RSpec::Core::Formatters::ConsoleCodes::VT100_CODE_VALUES = T.let(T.unsafe(nil), Hash)

class RSpec::Core::Formatters::DeprecationFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#12
  def initialize(deprecation_stream, summary_stream); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#10
  def count; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#32
  def deprecation(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#44
  def deprecation_message_for(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#10
  def deprecation_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#40
  def deprecation_summary(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#10
  def output; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#20
  def printer; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#10
  def summary_stream; end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#60
RSpec::Core::Formatters::DeprecationFormatter::DEPRECATION_STREAM_NOTICE = T.let(T.unsafe(nil), String)

class RSpec::Core::Formatters::DeprecationFormatter::DelayedPrinter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#140
  def initialize(deprecation_stream, summary_stream, deprecation_formatter); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#138
  def deprecation_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#138
  def deprecation_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#163
  def deprecation_summary; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#172
  def print_deferred_deprecation_warnings; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#148
  def print_deprecation_message(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#155
  def stash_deprecation_message(deprecation_message); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#138
  def summary_stream; end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#136
RSpec::Core::Formatters::DeprecationFormatter::DelayedPrinter::TOO_MANY_USES_LIMIT = T.let(T.unsafe(nil), Integer)

class RSpec::Core::Formatters::DeprecationFormatter::FileStream
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#197
  def initialize(file); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#207
  def puts(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#211
  def summarize(summary_stream, deprecation_count); end
end

class RSpec::Core::Formatters::DeprecationFormatter::GeneratedDeprecationMessage < ::Struct
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#95
  def initialize(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#100
  def to_s; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#107
  def too_many_warnings_message; end

  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Formatters::DeprecationFormatter::ImmediatePrinter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#116
  def initialize(deprecation_stream, summary_stream, deprecation_formatter); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#114
  def deprecation_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#114
  def deprecation_stream; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#128
  def deprecation_summary; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#123
  def print_deprecation_message(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#114
  def summary_stream; end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#52
RSpec::Core::Formatters::DeprecationFormatter::RAISE_ERROR_CONFIG_NOTICE = T.let(T.unsafe(nil), String)

class RSpec::Core::Formatters::DeprecationFormatter::RaiseErrorStream
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#185
  def puts(message); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#189
  def summarize(summary_stream, deprecation_count); end
end

class RSpec::Core::Formatters::DeprecationFormatter::SpecifiedDeprecationMessage < ::Struct
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#67
  def initialize(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#72
  def to_s; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#76
  def too_many_warnings_message; end

  def type; end
  def type=(_); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#88
  def deprecation_type_for(data); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#82
  def output_formatted(str); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/deprecation_formatter.rb#62
RSpec::Core::Formatters::DeprecationFormatter::TOO_MANY_WARNINGS_NOTICE = T.let(T.unsafe(nil), String)

class RSpec::Core::Formatters::DocumentationFormatter < ::RSpec::Core::Formatters::BaseTextFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#12
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#50
  def example_failed(failure); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#31
  def example_group_finished(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#24
  def example_group_started(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#35
  def example_passed(passed); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#42
  def example_pending(pending); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#20
  def example_started(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#57
  def message(notification); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#96
  def current_indentation(offset = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#85
  def failure_output(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#67
  def flush_messages; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#91
  def next_failure_index; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#75
  def passed_output(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/documentation_formatter.rb#79
  def pending_output(example, message); end
end

class RSpec::Core::Formatters::ExceptionPresenter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#16
  def initialize(exception, example, options = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#73
  def colorized_formatted_backtrace(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#33
  def colorized_message_lines(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def description; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def example; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#39
  def formatted_backtrace(exception = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#45
  def formatted_cause(exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#79
  def fully_formatted(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#84
  def fully_formatted_lines(failure_number, colorizer); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#29
  def message_lines; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#207
  def add_shared_group_lines(lines, colorizer); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def backtrace_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def detail_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#265
  def encoded_description(description); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#115
  def encoded_string(string); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#111
  def encoding_of(string); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#275
  def exception_backtrace; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#145
  def exception_class_name(exception = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#185
  def exception_lines; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#178
  def exception_message_string(exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def extra_detail_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#196
  def extra_failure_lines; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#151
  def failure_lines; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#165
  def failure_slash_error_lines; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#99
  def final_exception(exception, previous = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#241
  def find_failed_line; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#256
  def formatted_message_and_backtrace(colorizer); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#129
  def indent_lines(lines, failure_number); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#12
  def message_color; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#217
  def read_failed_lines; end
end

class RSpec::Core::Formatters::ExceptionPresenter::Factory
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#291
  def initialize(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#285
  def build; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#342
  def multiple_exception_summarizer(exception, prior_detail_formatter, color); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#338
  def multiple_exceptions_error?(exception); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#301
  def options; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#305
  def pending_options; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#363
  def sub_failure_list_formatter(exception, message_color); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#322
  def with_multiple_error_options_as_needed(exception, options); end
end

class RSpec::Core::Formatters::ExceptionPresenter::Factory::CommonBacktraceTruncater
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#397
  def initialize(parent); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#401
  def with_truncated_backtrace(child); end
end

module RSpec::Core::Formatters::ExceptionPresenter::Factory::EmptyBacktraceFormatter
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#390
    def format_backtrace(*_arg0); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#421
RSpec::Core::Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER = T.let(T.unsafe(nil), Proc)

class RSpec::Core::Formatters::FailureListFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/failure_list_formatter.rb#18
  def dump_profile(_profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/failure_list_formatter.rb#10
  def example_failed(failure); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/failure_list_formatter.rb#19
  def message(_message); end
end

class RSpec::Core::Formatters::FallbackMessageFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/fallback_message_formatter.rb#10
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/fallback_message_formatter.rb#22
  def message(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/fallback_message_formatter.rb#15
  def output; end
end

module RSpec::Core::Formatters::Helpers
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#24
    def format_duration(duration); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#60
    def format_seconds(float, precision = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#102
    def organize_ids(ids); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#88
    def pluralize(count, string); end

    private

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#76
    def strip_trailing_zeroes(string); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#12
RSpec::Core::Formatters::Helpers::DEFAULT_PRECISION = T.let(T.unsafe(nil), Integer)

# source://rspec-core/3.12.0/lib/rspec/core/formatters/helpers.rb#9
RSpec::Core::Formatters::Helpers::SUB_SECOND_PRECISION = T.let(T.unsafe(nil), Integer)

class RSpec::Core::Formatters::HtmlFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#13
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#103
  def dump_summary(summary); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#55
  def example_failed(failure); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#28
  def example_group_started(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#49
  def example_passed(passed); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#93
  def example_pending(pending); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#45
  def example_started(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#22
  def start(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#40
  def start_dump(_notification); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#120
  def example_group_number; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#125
  def example_number; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#141
  def extra_failure_content(failure); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_formatter.rb#130
  def percent_done; end
end

class RSpec::Core::Formatters::HtmlPrinter
  include ::ERB::Util

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#9
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#79
  def flush; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#96
  def make_example_group_header_red(group_id); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#103
  def make_example_group_header_yellow(group_id); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#88
  def make_header_red; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#92
  def make_header_yellow; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#83
  def move_progress(percent_done); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#36
  def print_example_failed(pending_fixed, description, run_time, failure_id, exception, extra_content); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#18
  def print_example_group_end; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#23
  def print_example_group_start(group_id, description, number_of_parents); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#29
  def print_example_passed(description, run_time); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#53
  def print_example_pending(description, pending_message); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#13
  def print_html_start; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#59
  def print_summary(duration, example_count, failure_count, pending_count); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#112
  def indentation_style(number_of_parents); end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#140
RSpec::Core::Formatters::HtmlPrinter::GLOBAL_SCRIPTS = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#218
RSpec::Core::Formatters::HtmlPrinter::GLOBAL_STYLES = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#382
RSpec::Core::Formatters::HtmlPrinter::HTML_HEADER = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/formatters/html_printer.rb#116
RSpec::Core::Formatters::HtmlPrinter::REPORT_HEADER = T.let(T.unsafe(nil), String)

class RSpec::Core::Formatters::JsonFormatter < ::RSpec::Core::Formatters::BaseFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#13
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#55
  def close(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#59
  def dump_profile(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#78
  def dump_profile_slowest_example_groups(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#66
  def dump_profile_slowest_examples(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#24
  def dump_summary(summary); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#20
  def message(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#11
  def output_hash; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#50
  def seed(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#35
  def stop(notification); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/json_formatter.rb#87
  def format_example(example); end
end

class RSpec::Core::Formatters::Loader
  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#105
  def initialize(reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#144
  def add(formatter_to_use, *paths); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#118
  def default_formatter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#118
  def default_formatter=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#112
  def formatters; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#121
  def prepare_default(output_stream, deprecation_stream); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#115
  def reporter; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#126
  def setup_default(output_stream, deprecation_stream); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#211
  def built_in_formatter(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#234
  def custom_formatter(formatter_ref); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#195
  def duplicate_formatter_exists?(new_formatter); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#207
  def existing_formatter_implements?(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#181
  def find_formatter(formatter_to_use); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#202
  def has_matching_output?(formatter, new_formatter); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#228
  def notifications_for(formatter_class); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#269
  def open_stream(path_or_wrapper); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#250
  def path_for(const_ref); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#188
  def register(formatter, notifications); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#246
  def string_const?(str); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#259
  def underscore(camel_cased_word); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#254
  def underscore_with_fix_for_non_standard_rspec_naming(string); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters.rb#100
    def formatters; end
  end
end

class RSpec::Core::Formatters::ProfileFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#11
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#25
  def dump_profile(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#16
  def output; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#62
  def bold(text); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#44
  def dump_profile_slowest_example_groups(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#32
  def dump_profile_slowest_examples(profile); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/profile_formatter.rb#57
  def format_caller(caller_info); end
end

class RSpec::Core::Formatters::ProgressFormatter < ::RSpec::Core::Formatters::BaseTextFormatter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/progress_formatter.rb#19
  def example_failed(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/progress_formatter.rb#11
  def example_passed(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/progress_formatter.rb#15
  def example_pending(_notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/progress_formatter.rb#23
  def start_dump(_notification); end
end

class RSpec::Core::Formatters::SnippetExtractor
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#35
  def initialize(source, beginning_line_number, max_line_count = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#24
  def beginning_line_number; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#41
  def expression_lines; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#24
  def max_line_count; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#24
  def source; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#95
  def expression_node; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#107
  def expression_outmost_node?(node); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#55
  def line_range_of_expression; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#87
  def line_range_of_location_nodes_in_expression; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#117
  def location_nodes_at_beginning_line; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#70
  def unclosed_tokens_in_line_range(line_range); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#26
    def extract_expression_lines_at(file_path, beginning_line_number, max_line_count = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#9
    def extract_line_at(file_path, line_number); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#128
    def least_indentation_from(lines); end

    # source://rspec-core/3.12.0/lib/rspec/core/formatters/snippet_extractor.rb#16
    def source_from_file(path); end
  end
end

class RSpec::Core::Formatters::SnippetExtractor::NoExpressionAtLineError < ::StandardError; end
class RSpec::Core::Formatters::SnippetExtractor::NoSuchFileError < ::StandardError; end
class RSpec::Core::Formatters::SnippetExtractor::NoSuchLineError < ::StandardError; end

class RSpec::Core::Formatters::SyntaxHighlighter
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#8
  def initialize(configuration); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#12
  def highlight(lines); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#50
  def color_enabled_implementation; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#44
  def implementation; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#18
    def attempt_to_add_rspec_terms_to_coderay_keywords; end
  end
end

module RSpec::Core::Formatters::SyntaxHighlighter::CodeRayImplementation
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#64
    def highlight_syntax(lines); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#62
RSpec::Core::Formatters::SyntaxHighlighter::CodeRayImplementation::RESET_CODE = T.let(T.unsafe(nil), String)

module RSpec::Core::Formatters::SyntaxHighlighter::NoSyntaxHighlightingImplementation
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#79
    def highlight_syntax(lines); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/formatters/syntax_highlighter.rb#87
RSpec::Core::Formatters::SyntaxHighlighter::WindowsImplementation = RSpec::Core::Formatters::SyntaxHighlighter::NoSyntaxHighlightingImplementation

module RSpec::Core::HashImitatable
  mixes_in_class_methods ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def <(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def <=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def >(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def >=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#388
  def [](key); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#398
  def []=(key, value); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def all?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def any?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def assoc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def chain(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def chunk(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def chunk_while(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def clear(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def collect(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def collect_concat(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def compact(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def compact!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def compare_by_identity(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def compare_by_identity?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def count(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def cycle(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def deconstruct_keys(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def default(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def default=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def default_proc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def default_proc=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def delete(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def delete_if(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def detect(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def dig(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def drop(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def drop_while(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_cons(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_entry(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_key(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_pair(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_slice(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_value(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_with_index(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def each_with_object(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def empty?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def entries(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def except(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def fetch(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def fetch_values(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def filter(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def filter!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def filter_map(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def find(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def find_all(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def find_index(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def first(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def flat_map(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def flatten(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def grep(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def grep_v(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def group_by(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def has_key?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def has_value?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def include?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def inject(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def invert(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def keep_if(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def key(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def key?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def keys(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def lazy(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def length(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def map(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def max(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def max_by(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def member?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def merge(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def merge!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def min(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def min_by(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def minmax(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def minmax_by(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def none?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def one?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def partition(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def rassoc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def reduce(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def rehash(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def reject(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def reject!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def replace(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def reverse_each(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def select(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def select!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def shift(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def size(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def slice(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def slice_after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def slice_before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def slice_when(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def sort(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def sort_by(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def store(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def sum(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def take(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def take_while(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def tally(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def to_a(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#354
  def to_h; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def to_hash(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def to_proc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def to_set(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def transform_keys(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def transform_keys!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def transform_values(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def transform_values!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def uniq(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def update(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def value?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def values(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def values_at(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#367
  def zip(*args, &block); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#414
  def directly_supports_attribute?(name); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#410
  def extra_hash_attributes; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#418
  def get_value(name); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#426
  def hash_for_delegation; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#430
  def issue_deprecation(_method_name, *_args); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#422
  def set_value(name, value); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#350
    def included(klass); end
  end
end

module RSpec::Core::HashImitatable::ClassMethods
  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#440
  def attr_accessor(*names); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#436
  def hash_attribute_names; end
end

module RSpec::Core::Hooks
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#277
  def after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#287
  def append_after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#200
  def append_before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#349
  def around(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#200
  def before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#355
  def hooks; end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#277
  def prepend_after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#210
  def prepend_before(*args, &block); end
end

class RSpec::Core::Hooks::AfterContextHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#380
  def run(example); end
end

class RSpec::Core::Hooks::AfterHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#371
  def run(example); end
end

class RSpec::Core::Hooks::AroundHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#389
  def execute_with(example, procsy); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#397
  def hook_description; end
end

class RSpec::Core::Hooks::BeforeHook < ::RSpec::Core::Hooks::Hook
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#364
  def run(example); end
end

class RSpec::Core::Hooks::Hook < ::Struct
  def block; end
  def block=(_); end
  def options; end
  def options=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Hooks::HookCollections
  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#421
  def initialize(owner, filterable_item_repo_class); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#449
  def register(prepend_or_append, position, *args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#442
  def register_global_singleton_context_hooks(example, globals); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#431
  def register_globals(host, globals); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#475
  def run(position, scope, example_or_group); end

  protected

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#523
  def all_hooks_for(position, scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#507
  def matching_hooks_for(position, scope, example_or_group); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#533
  def processable_hooks_for(position, scope, host); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#527
  def run_owned_hooks_for(position, scope, example_or_group); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#553
  def ensure_hooks_initialized_for(position, scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#591
  def extract_scope_from(args); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#543
  def hooks_for(position, scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#605
  def known_scope?(scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#609
  def normalized_scope_for(scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#633
  def owner_parent_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#571
  def process(host, parent_groups, globals, position, scope); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#619
  def run_around_example_hooks_for(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#613
  def run_example_hooks_for(example, position, each_method); end

  # source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#584
  def scope_and_options_from(*args); end
end

# source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#505
RSpec::Core::Hooks::HookCollections::EMPTY_HOOK_ARRAY = T.let(T.unsafe(nil), Array)

# source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#495
RSpec::Core::Hooks::HookCollections::HOOK_TYPES = T.let(T.unsafe(nil), Hash)

# source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#491
RSpec::Core::Hooks::HookCollections::SCOPES = T.let(T.unsafe(nil), Array)

# source://rspec-core/3.12.0/lib/rspec/core/hooks.rb#493
RSpec::Core::Hooks::HookCollections::SCOPE_ALIASES = T.let(T.unsafe(nil), Hash)

class RSpec::Core::InclusionRules < ::RSpec::Core::FilterRules
  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#187
  def add(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#191
  def add_with_low_priority(*args); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#195
  def include_example?(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#203
  def split_file_scoped_rules; end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#199
  def standalone?; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#213
  def apply_standalone_filter(updated); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#226
  def is_standalone_filter?(rules); end

  # source://rspec-core/3.12.0/lib/rspec/core/filter_manager.rb#221
  def replace_filters(new_rules); end
end

module RSpec::Core::Invocations; end

class RSpec::Core::Invocations::Bisect
  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#29
  def call(options, err, out); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#45
  def bisect_formatter_klass_for(argument); end
end

class RSpec::Core::Invocations::DRbWithFallback
  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#16
  def call(options, err, out); end
end

class RSpec::Core::Invocations::InitializeProject
  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#7
  def call(*_args); end
end

class RSpec::Core::Invocations::PrintHelp < ::Struct
  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#79
  def call(_options, _err, out); end

  def hidden_options; end
  def hidden_options=(_); end
  def parser; end
  def parser=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Invocations::PrintVersion
  # source://rspec-core/3.12.0/lib/rspec/core/invocations.rb#53
  def call(_options, _err, out); end
end

class RSpec::Core::LegacyExampleGroupHash
  include ::RSpec::Core::HashImitatable
  extend ::RSpec::Core::HashImitatable::ClassMethods

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#473
  def initialize(metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#479
  def to_h; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#485
  def directly_supports_attribute?(name); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#489
  def get_value(name); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#493
  def set_value(name, value); end
end

module RSpec::Core::MemoizedHelpers
  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#135
  def initialize(*_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#120
  def is_expected; end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#80
  def should(matcher = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#100
  def should_not(matcher = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#57
  def subject; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#141
  def __init_memoized; end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#129
  def __memoized; end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#150
  def enforce_value_expectation(matcher, method_name); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#163
  def matcher_supports_value_expectations?(matcher); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#542
    def define_helpers_on(example_group); end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#570
    def get_constant_or_yield(example_group, name); end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#528
    def module_for(example_group); end
  end
end

module RSpec::Core::MemoizedHelpers::ClassMethods
  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#306
  def let(name, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#400
  def let!(name, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#444
  def subject(name = T.unsafe(nil), &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#510
  def subject!(name = T.unsafe(nil), &block); end
end

class RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#222
    def fetch_or_store(key, &_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#201
    def isolate_for_context_hook(example_group_instance); end
  end
end

class RSpec::Core::MemoizedHelpers::ContextHookMemoized::After < ::RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#261
    def article; end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#257
    def hook_expression; end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#265
    def hook_intention; end
  end
end

class RSpec::Core::MemoizedHelpers::ContextHookMemoized::Before < ::RSpec::Core::MemoizedHelpers::ContextHookMemoized
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#246
    def article; end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#242
    def hook_expression; end

    # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#250
    def hook_intention; end
  end
end

class RSpec::Core::MemoizedHelpers::NonThreadSafeMemoized
  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#187
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#191
  def fetch_or_store(key); end
end

class RSpec::Core::MemoizedHelpers::ThreadsafeMemoized
  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#171
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/memoized_helpers.rb#176
  def fetch_or_store(key); end
end

module RSpec::Core::Metadata
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#71
    def ascend(metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#58
    def ascending(metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#80
    def build_hash_from(args, warn_about_example_group_filtering = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#94
    def deep_hash_dup(object); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#105
    def id_from(metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#110
    def location_tuple_from(metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#44
    def relative_path(line); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#36
    def relative_path_regex; end
  end
end

class RSpec::Core::Metadata::ExampleGroupHash < ::RSpec::Core::Metadata::HashPopulator
  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#304
  def described_class; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#311
  def full_description; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#265
    def backwards_compatibility_default_proc(&example_group_selector); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#248
    def create(parent_group_metadata, user_metadata, example_group_index, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#261
    def hash_with_backwards_compatibility_default_proc; end
  end
end

class RSpec::Core::Metadata::ExampleHash < ::RSpec::Core::Metadata::HashPopulator
  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#234
  def described_class; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#238
  def full_description; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#214
    def create(group_metadata, user_metadata, index_provider, description, block); end
  end
end

class RSpec::Core::Metadata::HashPopulator
  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#120
  def initialize(metadata, user_metadata, index_provider, description_args, block); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#118
  def block; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#118
  def description_args; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#118
  def metadata; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#128
  def populate; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#118
  def user_metadata; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#178
  def build_description_from(parent_description = T.unsafe(nil), my_description = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#185
  def build_scoped_id_for(file_path); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#170
  def description_separator(parent_part, child_part); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#191
  def ensure_valid_user_keys; end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#164
  def file_path_and_line_number_from(backtrace); end

  # source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#143
  def populate_location_attributes; end
end

# source://rspec-core/3.12.0/lib/rspec/core/metadata.rb#325
RSpec::Core::Metadata::RESERVED_KEYS = T.let(T.unsafe(nil), Array)

module RSpec::Core::MetadataFilter
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#11
    def apply?(predicate, filters, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#16
    def filter_applies?(key, filter_value, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#33
    def silence_metadata_example_group_deprecations; end

    private

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#42
    def filter_applies_to_any_value?(key, value, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#73
    def filters_apply?(key, value, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#46
    def id_filter_applies?(rerun_paths_to_scoped_ids, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#54
    def location_filter_applies?(locations, metadata); end

    # source://rspec-core/3.12.0/lib/rspec/core/metadata_filter.rb#65
    def proc_filter_applies?(key, proc, metadata); end
  end
end

class RSpec::Core::MultipleExceptionError < ::StandardError
  include ::RSpec::Core::MultipleExceptionError::InterfaceTag

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#492
  def initialize(*exceptions); end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#489
  def aggregation_block_label; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#485
  def aggregation_metadata; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#482
  def all_exceptions; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#517
  def exception_count_description; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#476
  def failures; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#507
  def message; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#479
  def other_errors; end

  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#512
  def summary; end
end

module RSpec::Core::MultipleExceptionError::InterfaceTag
  # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#441
  def add(exception); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/formatters/exception_presenter.rb#467
    def for(ex); end
  end
end

module RSpec::Core::Notifications; end

class RSpec::Core::Notifications::CustomNotification < ::Struct
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#515
    def for(options = T.unsafe(nil)); end
  end
end

class RSpec::Core::Notifications::DeprecationNotification < ::Struct
  def call_site; end
  def call_site=(_); end
  def deprecated; end
  def deprecated=(_); end
  def message; end
  def message=(_); end
  def replacement; end
  def replacement=(_); end

  class << self
    def [](*_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#497
    def from_hash(data); end

    def inspect; end
    def keyword_init?; end
    def members; end

    private

    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::ExampleNotification < ::Struct
  def example; end
  def example=(_); end

  class << self
    def [](*_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#41
    def for(example); end

    def inspect; end
    def keyword_init?; end
    def members; end

    private

    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::ExamplesNotification
  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#70
  def initialize(reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#75
  def examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#80
  def failed_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#97
  def failure_notifications; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#110
  def fully_formatted_failed_examples(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#122
  def fully_formatted_pending_examples(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#91
  def notifications; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#85
  def pending_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#104
  def pending_notifications; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#134
  def format_examples(examples); end
end

class RSpec::Core::Notifications::FailedExampleNotification < ::RSpec::Core::Notifications::ExampleNotification
  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#211
  def initialize(example, exception_presenter = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#193
  def colorized_formatted_backtrace(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#178
  def colorized_message_lines(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#163
  def description; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#158
  def exception; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#185
  def formatted_backtrace; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#199
  def fully_formatted(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#205
  def fully_formatted_lines(failure_number, colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#170
  def message_lines; end

  class << self
    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::GroupNotification < ::Struct
  def group; end
  def group=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::MessageNotification < ::Struct
  def message; end
  def message=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

module RSpec::Core::Notifications::NullColorizer
  private

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#14
  def wrap(line, _code_or_symbol); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#14
    def wrap(line, _code_or_symbol); end
  end
end

class RSpec::Core::Notifications::NullNotification; end
class RSpec::Core::Notifications::PendingExampleFailedAsExpectedNotification < ::RSpec::Core::Notifications::FailedExampleNotification; end
class RSpec::Core::Notifications::PendingExampleFixedNotification < ::RSpec::Core::Notifications::FailedExampleNotification; end

class RSpec::Core::Notifications::ProfileNotification
  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#428
  def initialize(duration, examples, number_of_examples, example_groups); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#434
  def duration; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#434
  def examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#434
  def number_of_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#453
  def percentage; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#445
  def slow_duration; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#437
  def slowest_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#462
  def slowest_groups; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#468
  def calculate_slowest_groups; end
end

class RSpec::Core::Notifications::SeedNotification < ::Struct
  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#280
  def fully_formatted; end

  def seed; end
  def seed=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#273
  def seed_used?; end

  def used=(_); end

  private

  def used; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::SkippedExampleNotification < ::RSpec::Core::Notifications::ExampleNotification
  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#233
  def fully_formatted(pending_number, colorizer = T.unsafe(nil)); end

  class << self
    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::StartNotification < ::Struct
  def count; end
  def count=(_); end
  def load_time; end
  def load_time=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::Notifications::SummaryNotification < ::Struct
  include ::RSpec::Core::ShellEscape

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#362
  def colorized_rerun_commands(colorizer = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#345
  def colorized_totals_line(colorizer = T.unsafe(nil)); end

  def duration; end
  def duration=(_); end
  def errors_outside_of_examples_count; end
  def errors_outside_of_examples_count=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#304
  def example_count; end

  def examples; end
  def examples=(_); end
  def failed_examples; end
  def failed_examples=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#310
  def failure_count; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#372
  def formatted_duration; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#378
  def formatted_load_time; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#384
  def fully_formatted(colorizer = T.unsafe(nil)); end

  def load_time; end
  def load_time=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#316
  def pending_count; end

  def pending_examples; end
  def pending_examples=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#322
  def totals_line; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#406
  def duplicate_rerun_locations; end

  # source://rspec-core/3.12.0/lib/rspec/core/notifications.rb#400
  def rerun_argument_for(example); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Core::NullReporter
  class << self
    private

    # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#260
    def method_missing(*_arg0); end
  end
end

module RSpec::Core::Ordering; end

class RSpec::Core::Ordering::ConfigurationManager
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#119
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#151
  def force(hash); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#136
  def order=(type); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#117
  def ordering_registry; end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#162
  def register_ordering(name, strategy = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#117
  def seed; end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#130
  def seed=(seed); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#126
  def seed_used?; end
end

class RSpec::Core::Ordering::Custom
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#72
  def initialize(callable); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#76
  def order(list); end
end

class RSpec::Core::Ordering::Identity
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#8
  def order(items); end
end

class RSpec::Core::Ordering::Random
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#16
  def initialize(configuration); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#25
  def order(items); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#21
  def used?; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#39
  def jenkins_hash_digest(string); end
end

# source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#58
RSpec::Core::Ordering::Random::MAX_32_BIT = T.let(T.unsafe(nil), Integer)

class RSpec::Core::Ordering::RecentlyModified
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#64
  def order(list); end
end

class RSpec::Core::Ordering::Registry
  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#84
  def initialize(configuration); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#98
  def fetch(name, &fallback); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#102
  def register(sym, strategy); end

  # source://rspec-core/3.12.0/lib/rspec/core/ordering.rb#106
  def used_random_seed?; end
end

class RSpec::Core::OutputWrapper
  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#9
  def initialize(output); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def <<(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def advise(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def autoclose=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def autoclose?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def binmode(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def binmode?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def close(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def close_on_exec=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def close_on_exec?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def close_read(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def close_write(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def closed?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def each(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def each_byte(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def each_char(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def each_codepoint(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def each_line(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def eof(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def eof?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def external_encoding(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def fcntl(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def fdatasync(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def fileno(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def flush(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def fsync(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def getbyte(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def getc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def gets(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def inspect(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def internal_encoding(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def ioctl(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def isatty(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def lineno(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def lineno=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#17
  def method_missing(name, *args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def nonblock(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def nonblock=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def nonblock?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def nread(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#6
  def output; end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#6
  def output=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pathconf(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pid(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pos(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pos=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pread(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def print(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def printf(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def putc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def puts(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def pwrite(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def read(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def read_nonblock(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def readbyte(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def readchar(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def readline(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def readlines(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def readpartial(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def ready?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def reopen(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#13
  def respond_to?(name, priv = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def rewind(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def seek(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def set_encoding(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def set_encoding_by_bom(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def stat(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def sync(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def sync=(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def sysread(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def sysseek(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def syswrite(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def tell(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def to_i(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def to_io(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def tty?(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def ungetbyte(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def ungetc(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def wait(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def wait_priority(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def wait_readable(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def wait_writable(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def write(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/output_wrapper.rb#23
  def write_nonblock(*args, &block); end
end

class RSpec::Core::Parser
  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#13
  def initialize(original_args); end

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#11
  def original_args; end

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#17
  def parse(source = T.unsafe(nil)); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#310
  def add_tag_filter(options, filter_type, tag_name, value = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#318
  def configure_only_failures(options); end

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#39
  def parser(options); end

  # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#314
  def set_fail_fast(options, value); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/option_parser.rb#7
    def parse(args, source = T.unsafe(nil)); end
  end
end

module RSpec::Core::Pending
  # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#62
  def pending(message = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#110
  def skip(message = T.unsafe(nil)); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#152
    def mark_fixed!(example); end

    # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#135
    def mark_pending!(example, message_or_bool); end

    # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#124
    def mark_skipped!(example, message_or_bool); end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/pending.rb#29
RSpec::Core::Pending::NOT_YET_IMPLEMENTED = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/pending.rb#26
RSpec::Core::Pending::NO_REASON_GIVEN = T.let(T.unsafe(nil), String)

class RSpec::Core::Pending::PendingExampleFixedError < ::StandardError; end

class RSpec::Core::Pending::SkipDeclaredInExample < ::StandardError
  # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#11
  def initialize(argument); end

  # source://rspec-core/3.12.0/lib/rspec/core/pending.rb#9
  def argument; end
end

class RSpec::Core::Profiler
  # source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#7
  def initialize; end

  # source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#20
  def example_group_finished(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#13
  def example_group_started(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#11
  def example_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#28
  def example_started(notification); end
end

# source://rspec-core/3.12.0/lib/rspec/core/profiler.rb#5
RSpec::Core::Profiler::NOTIFICATIONS = T.let(T.unsafe(nil), Array)

class RSpec::Core::Reporter
  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#14
  def initialize(configuration); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#214
  def abort_with(msg, exit_status); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#193
  def close_after; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#155
  def deprecation(hash); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#143
  def example_failed(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#133
  def example_finished(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#122
  def example_group_finished(group); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#117
  def example_group_started(group); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#138
  def example_passed(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#149
  def example_pending(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#127
  def example_started(example); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#28
  def examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#84
  def exit_early(exit_code); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#221
  def fail_fast_limit_met?; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#28
  def failed_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#173
  def finish; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#99
  def message(message); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#206
  def notify(event, notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#163
  def notify_non_example_exception(exception, context_description); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#28
  def pending_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#45
  def prepare_default(loader, output_stream, deprecation_stream); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#108
  def publish(event, options = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#37
  def register_listener(listener, *notifications); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#52
  def registered_listeners(notification); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#71
  def report(expected_example_count); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#89
  def start(expected_example_count, time = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#200
  def stop; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#242
  def close; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#233
  def ensure_listeners_ready; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#246
  def mute_profile_output?; end

  # source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#252
  def seed_used?; end
end

# source://rspec-core/3.12.0/lib/rspec/core/reporter.rb#6
RSpec::Core::Reporter::RSPEC_NOTIFICATIONS = T.let(T.unsafe(nil), RSpec::Core::Set)

module RSpec::Core::RubyProject
  private

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#12
  def add_dir_to_load_path(dir); end

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#8
  def add_to_load_path(*dirs); end

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#28
  def ascend_until; end

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#20
  def determine_root; end

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#24
  def find_first_parent_containing(dir); end

  # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#16
  def root; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#12
    def add_dir_to_load_path(dir); end

    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#8
    def add_to_load_path(*dirs); end

    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#28
    def ascend_until; end

    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#20
    def determine_root; end

    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#24
    def find_first_parent_containing(dir); end

    # source://rspec-core/3.12.0/lib/rspec/core/ruby_project.rb#16
    def root; end
  end
end

class RSpec::Core::Runner
  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#75
  def initialize(options, configuration = T.unsafe(nil), world = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#7
  def configuration; end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#129
  def configure(err, out); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#190
  def exit_code(examples_passed = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#7
  def options; end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#85
  def run(err, out); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#113
  def run_specs(example_groups); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#98
  def setup(err, out); end

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#7
  def world; end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#199
  def persist_example_statuses; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#16
    def autorun; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#141
    def autorun_disabled?; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#136
    def disable_autorun!; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#180
    def handle_interrupt; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#146
    def installed_at_exit?; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#43
    def invoke; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#29
    def perform_at_exit; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#64
    def run(args, err = T.unsafe(nil), out = T.unsafe(nil)); end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#151
    def running_in_drb?; end

    # source://rspec-core/3.12.0/lib/rspec/core/runner.rb#175
    def trap_interrupt; end
  end
end

class RSpec::Core::Set
  include ::Enumerable

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#14
  def initialize(array = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#23
  def <<(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#48
  def clear; end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#28
  def delete(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#32
  def each(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#19
  def empty?; end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#37
  def include?(key); end

  # source://rspec-core/3.12.0/lib/rspec/core/set.rb#41
  def merge(values); end
end

module RSpec::Core::SharedContext
  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#28
  def __shared_context_recordings; end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def append_after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def append_before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def around(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def context(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def describe(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def hooks(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#21
  def included(group); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def let(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def let!(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def prepend_after(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def prepend_before(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def subject(*args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#42
  def subject!(*args, &block); end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#40
    def record(methods); end
  end
end

class RSpec::Core::SharedContext::Recording < ::Struct
  def args; end
  def args=(_); end
  def block; end
  def block=(_); end
  def method_name; end
  def method_name=(_); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#34
  def playback_onto(group); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

module RSpec::Core::SharedExampleGroup
  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#90
  def shared_context(name, *args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#90
  def shared_examples(name, *args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#90
  def shared_examples_for(name, *args, &block); end
end

class RSpec::Core::SharedExampleGroup::Registry
  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#150
  def add(context, name, *metadata_args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#174
  def find(lookup_contexts, name); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#257
  def ensure_block_has_source_location(_block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#245
  def formatted_location(block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#189
  def legacy_add(context, name, *metadata_args, &block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#204
  def shared_example_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#208
  def valid_name?(candidate); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#215
  def warn_if_key_taken(context, key, new_block); end
end

module RSpec::Core::SharedExampleGroup::TopLevelDSL
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#108
    def definitions; end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#126
    def expose_globally!; end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#119
    def exposed_globally?; end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#135
    def remove_globally!; end
  end
end

class RSpec::Core::SharedExampleGroupInclusionStackFrame
  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#789
  def initialize(shared_group_name, inclusion_location); end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#805
  def description; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#795
  def formatted_inclusion_location; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#786
  def inclusion_location; end

  # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#784
  def shared_group_name; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#811
    def current_backtrace; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#829
    def shared_example_group_inclusions; end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#816
    def with_frame(name, location); end
  end
end

class RSpec::Core::SharedExampleGroupModule < ::Module
  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#13
  def initialize(description, definition, metadata); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#11
  def definition; end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#34
  def include_in(klass, inclusion_line, args, customization_block); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#28
  def included(klass); end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#20
  def inspect; end

  # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#20
  def to_s; end
end

module RSpec::Core::ShellEscape
  private

  # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#32
  def conditionally_quote(id); end

  # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#19
  def escape(shell_command); end

  # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#8
  def quote(argument); end

  # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#37
  def shell_allows_unquoted_ids?; end

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#32
    def conditionally_quote(id); end

    # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#19
    def escape(shell_command); end

    # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#8
    def quote(argument); end

    # source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#37
    def shell_allows_unquoted_ids?; end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core/shell_escape.rb#30
RSpec::Core::ShellEscape::SHELLS_ALLOWING_UNQUOTED_IDS = T.let(T.unsafe(nil), Array)

class RSpec::Core::SuiteHookContext < ::RSpec::Core::Example
  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#652
  def initialize(hook_description, reporter); end

  # source://rspec-core/3.12.0/lib/rspec/core/example.rb#659
  def set_exception(exception); end
end

class RSpec::Core::Time
  class << self
    def now(in: T.unsafe(nil)); end
  end
end

module RSpec::Core::Version; end

# source://rspec-core/3.12.0/lib/rspec/core/version.rb#6
RSpec::Core::Version::STRING = T.let(T.unsafe(nil), String)

module RSpec::Core::Warnings
  # source://rspec-core/3.12.0/lib/rspec/core/warnings.rb#10
  def deprecate(deprecated, data = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/warnings.rb#22
  def warn_deprecation(message, opts = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/warnings.rb#27
  def warn_with(message, options = T.unsafe(nil)); end
end

class RSpec::Core::World
  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#26
  def initialize(configuration = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#115
  def all_example_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#120
  def all_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#226
  def announce_exclusion_filter(announcements); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#171
  def announce_filters; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#217
  def announce_inclusion_filter(announcements); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#210
  def everything_filtered_message; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#109
  def example_count(groups = T.unsafe(nil)); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#8
  def example_group_counts_by_spec_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#8
  def example_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#102
  def exclusion_filter; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#69
  def filter_manager; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#8
  def filtered_examples; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#97
  def inclusion_filter; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#24
  def non_example_failure; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#24
  def non_example_failure=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#87
  def num_example_groups_defined_in(file); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#52
  def ordered_example_groups; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#140
  def preceding_declaration_line(absolute_file_name, filter_line); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#43
  def prepare_example_filtering; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#81
  def record(example_group); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#74
  def registered_example_group_files; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#205
  def report_filter_message(message); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#149
  def reporter; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#60
  def reset; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#18
  def rspec_is_quitting; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#18
  def rspec_is_quitting=(_arg0); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#92
  def shared_example_group_registry; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#154
  def source_from_file(path); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#164
  def syntax_highlighter; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#131
  def traverse_example_group_trees_until(&block); end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#11
  def wants_to_quit; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#11
  def wants_to_quit=(_arg0); end

  private

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#234
  def descending_declaration_line_numbers_by_file; end

  # source://rspec-core/3.12.0/lib/rspec/core/world.rb#252
  def fail_if_config_and_cli_options_invalid; end
end

module RSpec::Core::World::Null
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#280
    def all_example_groups; end

    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#276
    def example_groups; end

    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#265
    def non_example_failure; end

    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#266
    def non_example_failure=(_); end

    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#268
    def registered_example_group_files; end

    # source://rspec-core/3.12.0/lib/rspec/core/world.rb#272
    def traverse_example_group_trees_until; end
  end
end

module RSpec::ExampleGroups
  extend ::RSpec::Support::RecursiveConstMethods

  class << self
    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#842
    def assign_const(group); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#862
    def base_name_for(group); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#850
    def constant_scope_for(group); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#895
    def disambiguate(name, const_scope); end

    # source://rspec-core/3.12.0/lib/rspec/core/example_group.rb#856
    def remove_all_constants; end
  end
end

# source://rspec-core/3.12.0/lib/rspec/core.rb#187
RSpec::MODULES_TO_AUTOLOAD = T.let(T.unsafe(nil), Hash)

# Contains top-level utility methods. While this contains a few
# public methods, these are not generally meant to be called from
# a test or example. They exist primarily for integration with
# test frameworks (such as rspec-core).
module RSpec::Mocks
  class << self
    # Adds an allowance (stub) on `subject`
    #
    # @example Defines the implementation of `foo` on `bar`, using the passed block
    #   x = 0
    #   RSpec::Mocks.allow_message(bar, :foo) { x += 1 }
    # @param subject the subject to which the message will be added
    # @param message a symbol, representing the message that will be
    #   added.
    # @param opts a hash of options, :expected_from is used to set the
    #   original call site
    # @yield an optional implementation for the allowance
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#69
    def allow_message(subject, message, opts = T.unsafe(nil), &block); end

    # Mocks specific configuration, as distinct from `RSpec.configuration`
    # which is core RSpec configuration.
    #
    # source://rspec-mocks//lib/rspec/mocks/configuration.rb#206
    def configuration; end

    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#376
    def error_generator; end

    # Sets a message expectation on `subject`.
    #
    # @example Expect the message `foo` to receive `bar`, then call it
    #   RSpec::Mocks.expect_message(bar, :foo)
    #   bar.foo
    # @param subject the subject on which the message will be expected
    # @param message a symbol, representing the message that will be
    #   expected.
    # @param opts a hash of options, :expected_from is used to set the
    #   original call site
    # @yield an optional implementation for the expectation
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#84
    def expect_message(subject, message, opts = T.unsafe(nil), &block); end

    # Performs per-test/example setup. This should be called before
    # an test or example begins.
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#38
    def setup; end

    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#106
    def space; end

    # Cleans up all test double state (including any methods that were
    # redefined on partial doubles). This _must_ be called after
    # each example, even if an error was raised during the example.
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#51
    def teardown; end

    # Verifies any message expectations that were set during the
    # test or example. This should be called at the end of an example.
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#44
    def verify; end

    # Call the passed block and verify mocks after it has executed. This allows
    # mock usage in arbitrary places, such as a `before(:all)` hook.
    #
    # @return [Object] the return value from the block
    #
    # source://rspec-mocks//lib/rspec/mocks.rb#92
    def with_temporary_scope; end
  end
end

# @private
class RSpec::Mocks::AllowanceTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#93
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def not_to(matcher, *_args); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def to_not(matcher, *_args); end
end

# Handles the implementation of an `and_invoke` implementation.
#
# @private
class RSpec::Mocks::AndInvokeImplementation
  # @return [AndInvokeImplementation] a new instance of AndInvokeImplementation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#738
  def initialize(procs_to_invoke); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#742
  def call(*args, &block); end
end

# Handles the implementation of an `and_return` implementation.
#
# @private
class RSpec::Mocks::AndReturnImplementation
  # @return [AndReturnImplementation] a new instance of AndReturnImplementation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#722
  def initialize(values_to_return); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#726
  def call(*_args_to_ignore, &_block); end
end

# Represents an `and_call_original` implementation.
#
# @private
class RSpec::Mocks::AndWrapOriginalImplementation
  # @return [AndWrapOriginalImplementation] a new instance of AndWrapOriginalImplementation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#780
  def initialize(method, block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#807
  def call(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#787
  def initial_action=(_value); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#803
  def inner_action; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#791
  def inner_action=(_value); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#799
  def present?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#795
  def terminal_action=(_value); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#814
  def cannot_modify_further_error; end
end

class RSpec::Mocks::AndWrapOriginalImplementation::CannotModifyFurtherError < ::StandardError; end

# Handles the implementation of an `and_yield` declaration.
#
# @private
class RSpec::Mocks::AndYieldImplementation
  # @return [AndYieldImplementation] a new instance of AndYieldImplementation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#695
  def initialize(args_to_yield, eval_context, error_generator); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#701
  def call(*_args_to_ignore, &block); end
end

# @private
module RSpec::Mocks::AnyInstance
  class << self
    # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#26
    def error_generator; end
  end
end

# @private
class RSpec::Mocks::AnyInstance::Chain
  include ::RSpec::Mocks::AnyInstance::Chain::Customizations

  # @return [Chain] a new instance of Chain
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#7
  def initialize(recorder, *args, &block); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#61
  def constrained_to_any_of?(*constraints); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#75
  def expectation_fulfilled!; end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#70
  def matches_args?(*args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#79
  def never; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#53
  def playback!(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#84
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#99
  def last_message; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#95
  def messages; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#91
  def negated?; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#103
  def record(rspec_method_name, *args, &block); end
end

# Provides convenience methods for recording customizations on message
# expectations.
#
# @private
module RSpec::Mocks::AnyInstance::Chain::Customizations
  # Records the `and_call_original` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_call_original
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_call_original(*args, &block); end

  # Records the `and_raise` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_raise
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_raise(*args, &block); end

  # Records the `and_return` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_return
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_return(*args, &block); end

  # Records the `and_throw` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_throw
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_throw(*args, &block); end

  # Records the `and_wrap_original` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_wrap_original
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_wrap_original(*args, &block); end

  # Records the `and_yield` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#and_yield
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def and_yield(*args, &block); end

  # Records the `at_least` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#at_least
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def at_least(*args, &block); end

  # Records the `at_most` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#at_most
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def at_most(*args, &block); end

  # Records the `exactly` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#exactly
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def exactly(*args, &block); end

  # Records the `never` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#never
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def never(*args, &block); end

  # Records the `once` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#once
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def once(*args, &block); end

  # Records the `thrice` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#thrice
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def thrice(*args, &block); end

  # Records the `time` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#time
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def time(*args, &block); end

  # Records the `times` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#times
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def times(*args, &block); end

  # Records the `twice` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#twice
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def twice(*args, &block); end

  # Records the `with` message for playback against an instance that
  # invokes a method stubbed or mocked using `any_instance`.
  #
  # @see RSpec::Mocks::MessageExpectation#with
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#27
  def with(*args, &block); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/any_instance/chain.rb#26
    def record(method_name); end
  end
end

# @private
class RSpec::Mocks::AnyInstance::ErrorGenerator < ::RSpec::Mocks::ErrorGenerator
  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#11
  def raise_does_not_implement_error(klass, method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#15
  def raise_message_already_received_by_other_instance_error(method_name, object_inspect, invoked_instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#20
  def raise_not_supported_with_prepend_error(method_name, problem_mod); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/error_generator.rb#6
  def raise_second_instance_received_message_error(unfulfilled_expectations); end
end

# @private
class RSpec::Mocks::AnyInstance::ExpectChainChain < ::RSpec::Mocks::AnyInstance::StubChain
  # @return [ExpectChainChain] a new instance of ExpectChainChain
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#6
  def initialize(*args); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#11
  def expectation_fulfilled?; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#15
  def playback!(instance); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#21
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expect_chain_chain.rb#25
  def invocation_order; end
end

# @private
class RSpec::Mocks::AnyInstance::ExpectationChain < ::RSpec::Mocks::AnyInstance::Chain
  # @return [ExpectationChain] a new instance of ExpectationChain
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#10
  def initialize(*args, &block); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#6
  def expectation_fulfilled?; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#17
  def verify_invocation_order(_rspec_method_name, *_args, &_block); end
end

# Delegates messages to each of the given targets in order to
# provide the fluent interface that is available off of message
# expectations when dealing with `any_instance`.
#
# `targets` will typically contain 1 of the `AnyInstance::Recorder`
# return values and N `MessageExpectation` instances (one per instance
# of the `any_instance` klass).
#
# @private
class RSpec::Mocks::AnyInstance::FluentInterfaceProxy
  # @return [FluentInterfaceProxy] a new instance of FluentInterfaceProxy
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#95
  def initialize(targets); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#109
  def method_missing(*args, &block); end

  private

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#100
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end
end

# @private
class RSpec::Mocks::AnyInstance::MessageChains
  # @return [MessageChains] a new instance of MessageChains
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#6
  def initialize; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#11
  def [](method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#16
  def add(method_name, chain); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#43
  def all_expectations_fulfilled?; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#36
  def each_unfulfilled_expectation_matching(method_name, *args); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#29
  def has_expectation?(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#64
  def playback!(instance, method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#57
  def received_expected_message!(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#22
  def remove_stub_chains_for!(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#50
  def unfulfilled_expectations; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/message_chains.rb#73
  def raise_if_second_instance_to_receive_message(instance); end
end

# @private
class RSpec::Mocks::AnyInstance::PositiveExpectationChain < ::RSpec::Mocks::AnyInstance::ExpectationChain
  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#25
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#44
  def invocation_order; end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/expectation_chain.rb#38
RSpec::Mocks::AnyInstance::PositiveExpectationChain::ExpectationInvocationOrder = T.let(T.unsafe(nil), Hash)

# The `AnyInstance::Recorder` is responsible for redefining the klass's
# instance method in order to add any stubs/expectations the first time
# the method is called. It's not capable of updating a stub on an instance
# that's already been previously stubbed (either directly, or via
# `any_instance`).
#
# This proxy sits in front of the recorder and delegates both to it
# and to the `RSpec::Mocks::Proxy` for each already mocked or stubbed
# instance of the class, in order to propogates changes to the instances.
#
# Note that unlike `RSpec::Mocks::Proxy`, this proxy class is stateless
# and is not persisted in `RSpec::Mocks.space`.
#
# Proxying for the message expectation fluent interface (typically chained
# off of the return value of one of these methods) is provided by the
# `FluentInterfaceProxy` class below.
#
# @private
class RSpec::Mocks::AnyInstance::Proxy
  # @return [Proxy] a new instance of Proxy
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#22
  def initialize(recorder, target_proxies); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#55
  def expect_chain(*chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#27
  def klass; end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#71
  def should_not_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#61
  def should_receive(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#31
  def stub(method_name_or_method_map, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#49
  def stub_chain(*chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#43
  def unstub(method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/proxy.rb#79
  def perform_proxying(method_name, args, block, &target_proxy_block); end
end

# Given a class `TheClass`, `TheClass.any_instance` returns a `Recorder`,
# which records stubs and message expectations for later playback on
# instances of `TheClass`.
#
# Further constraints are stored in instances of [Chain](Chain).
#
# @see AnyInstance
# @see Chain
class RSpec::Mocks::AnyInstance::Recorder
  # @return [Recorder] a new instance of Recorder
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#16
  def initialize(klass); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#127
  def already_observing?(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#122
  def build_alias_method_name(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#53
  def expect_chain(*method_names_and_optional_return_values, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#117
  def instance_that_received(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def klass; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def message_chains; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#132
  def notify_received_message(_object, message, args, _blk); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#109
  def playback!(instance, method_name); end

  # The opposite of `should_receive`
  #
  # @see Methods#should_not_receive
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#75
  def should_not_receive(method_name, &block); end

  # Initializes the recording a message expectation to be played back
  # against any instance of this object that invokes the submitted
  # method.
  #
  # @see Methods#should_receive
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#66
  def should_receive(method_name, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#104
  def stop_all_observation!; end

  # Initializes the recording a stub to be played back against any
  # instance of this object that invokes the submitted method.
  #
  # @see Methods#stub
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#35
  def stub(method_name, &block); end

  # Initializes the recording a stub chain to be played back against any
  # instance of this object that invokes the method matching the first
  # argument.
  #
  # @see Methods#stub_chain
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#45
  def stub_chain(*method_names_and_optional_return_values, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#14
  def stubs; end

  # Removes any previously recorded stubs, stub_chains or message
  # expectations that use `method_name`.
  #
  # @see Methods#unstub
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#83
  def unstub(method_name); end

  # Used internally to verify that message expectations have been
  # fulfilled.
  #
  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#96
  def verify; end

  protected

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#148
  def stop_observing!(method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#280
  def allow_no_prepended_module_definition_of(method_name); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#159
  def ancestor_is_an_observer?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#233
  def backup_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#267
  def mark_invoked!(method_name); end

  # @yield [args.first, args]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#176
  def normalize_chain(*args); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#247
  def observe!(method_name); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#243
  def public_protected_or_private_method_defined?(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#181
  def received_expected_message!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#227
  def remove_dummy_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#187
  def restore_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#195
  def restore_original_method!(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#168
  def super_class_observers_for(method_name); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/recorder.rb#172
  def super_class_observing?(method_name); end
end

# @private
class RSpec::Mocks::AnyInstance::StubChain < ::RSpec::Mocks::AnyInstance::Chain
  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#7
  def expectation_fulfilled?; end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#13
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#40
  def invocation_order; end

  # @raise [NoMethodError]
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#44
  def verify_invocation_order(rspec_method_name, *_args, &_block); end
end

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#38
RSpec::Mocks::AnyInstance::StubChain::EmptyInvocationOrder = T.let(T.unsafe(nil), Hash)

# source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain.rb#28
RSpec::Mocks::AnyInstance::StubChain::InvocationOrder = T.let(T.unsafe(nil), Hash)

# @private
class RSpec::Mocks::AnyInstance::StubChainChain < ::RSpec::Mocks::AnyInstance::StubChain
  # @return [StubChainChain] a new instance of StubChainChain
  #
  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#6
  def initialize(*args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#13
  def create_message_expectation_on(instance); end

  # source://rspec-mocks//lib/rspec/mocks/any_instance/stub_chain_chain.rb#17
  def invocation_order; end
end

# @private
class RSpec::Mocks::AnyInstanceAllowanceTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#104
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def not_to(matcher, *_args); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#29
  def to_not(matcher, *_args); end
end

# @private
class RSpec::Mocks::AnyInstanceExpectationTarget < ::RSpec::Mocks::TargetBase
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#115
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def not_to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def to_not(matcher, &block); end
end

# Wrapper for matching arguments against a list of expected values. Used by
# the `with` method on a `MessageExpectation`:
#
#     expect(object).to receive(:message).with(:a, 'b', 3)
#     object.message(:a, 'b', 3)
#
# Values passed to `with` can be literal values or argument matchers that
# match against the real objects .e.g.
#
#     expect(object).to receive(:message).with(hash_including(:a => 'b'))
#
# Can also be used directly to match the contents of any `Array`. This
# enables 3rd party mocking libs to take advantage of rspec's argument
# matching without using the rest of rspec-mocks.
#
#     require 'rspec/mocks/argument_list_matcher'
#     include RSpec::Mocks::ArgumentMatchers
#
#     arg_list_matcher = RSpec::Mocks::ArgumentListMatcher.new(123, hash_including(:a => 'b'))
#     arg_list_matcher.args_match?(123, :a => 'b')
#
# This class is immutable.
#
# @see ArgumentMatchers
class RSpec::Mocks::ArgumentListMatcher
  # Initializes an `ArgumentListMatcher` with a collection of literal
  # values and/or argument matchers.
  #
  # @api public
  # @param expected_args [Array] a list of expected literals and/or argument matchers
  # @return [ArgumentListMatcher] a new instance of ArgumentListMatcher
  # @see ArgumentMatchers
  # @see #args_match?
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#45
  def initialize(*expected_args, **_arg1); end

  # Matches each element in the `expected_args` against the element in the same
  # position of the arguments passed to `new`.
  #
  # @api public
  # @param actual_args [Array]
  # @return [Boolean]
  # @see #initialize
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#58
  def args_match?(*actual_args, **_arg1); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#35
  def expected_args; end

  # Resolves abstract arg placeholders like `no_args` and `any_args` into
  # a more concrete arg list based on the provided `actual_args`.
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#79
  def resolve_expected_args_based_on(actual_args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#98
  def ensure_expected_args_valid!; end

  # source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#90
  def replace_any_args_with_splat_of_anything(before_count, actual_args_count); end
end

# Value that will match all argument lists.
#
# @private
#
# source://rspec-mocks//lib/rspec/mocks/argument_list_matcher.rb#112
RSpec::Mocks::ArgumentListMatcher::MATCH_ALL = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentListMatcher)

# ArgumentMatchers are placeholders that you can include in message
# expectations to match arguments against a broader check than simple
# equality.
#
# With the exception of `any_args` and `no_args`, they all match against
# the arg in same position in the argument list.
#
# @see ArgumentListMatcher
module RSpec::Mocks::ArgumentMatchers
  # Matches if `arg.kind_of?(klass)`
  #
  # @example
  #   expect(object).to receive(:message).with(kind_of(Thing))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def a_kind_of(klass); end

  # Matches if `arg.instance_of?(klass)`
  #
  # @example
  #   expect(object).to receive(:message).with(instance_of(Thing))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#101
  def an_instance_of(klass); end

  # Acts like an arg splat, matching any number of args at any point in an arg list.
  #
  # @example
  #   expect(object).to receive(:message).with(1, 2, any_args)
  #
  #   # matches any of these:
  #   object.message(1, 2)
  #   object.message(1, 2, 3)
  #   object.message(1, 2, 3, 4)
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#26
  def any_args; end

  # Matches any argument at all.
  #
  # @example
  #   expect(object).to receive(:message).with(anything)
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#34
  def anything; end

  # Matches an array that includes the specified items at least once.
  # Ignores duplicates and additional values
  #
  # @example
  #   expect(object).to receive(:message).with(array_including(1,2,3))
  #   expect(object).to receive(:message).with(array_including([1,2,3]))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#80
  def array_including(*args); end

  # Matches a boolean value.
  #
  # @example
  #   expect(object).to receive(:message).with(boolean())
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#59
  def boolean; end

  # Matches if the actual argument responds to the specified messages.
  #
  # @example
  #   expect(object).to receive(:message).with(duck_type(:hello))
  #   expect(object).to receive(:message).with(duck_type(:hello, :goodbye))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#51
  def duck_type(*args); end

  # Matches a hash that doesn't include the specified key(s) or key/value.
  #
  # @example
  #   expect(object).to receive(:message).with(hash_excluding(:key => val))
  #   expect(object).to receive(:message).with(hash_excluding(:key))
  #   expect(object).to receive(:message).with(hash_excluding(:key, :key2 => :val2))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#91
  def hash_excluding(*args); end

  # Matches a hash that includes the specified key(s) or key/value pairs.
  # Ignores any additional keys.
  #
  # @example
  #   expect(object).to receive(:message).with(hash_including(:key => val))
  #   expect(object).to receive(:message).with(hash_including(:key))
  #   expect(object).to receive(:message).with(hash_including(:key, :key2 => val2))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#70
  def hash_including(*args); end

  # Matches a hash that doesn't include the specified key(s) or key/value.
  #
  # @example
  #   expect(object).to receive(:message).with(hash_excluding(:key => val))
  #   expect(object).to receive(:message).with(hash_excluding(:key))
  #   expect(object).to receive(:message).with(hash_excluding(:key, :key2 => :val2))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#91
  def hash_not_including(*args); end

  # Matches if `arg.instance_of?(klass)`
  #
  # @example
  #   expect(object).to receive(:message).with(instance_of(Thing))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#101
  def instance_of(klass); end

  # Matches if `arg.kind_of?(klass)`
  #
  # @example
  #   expect(object).to receive(:message).with(kind_of(Thing))
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#111
  def kind_of(klass); end

  # Matches no arguments.
  #
  # @example
  #   expect(object).to receive(:message).with(no_args)
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#42
  def no_args; end

  class << self
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#118
    def anythingize_lonely_keys(*args); end
  end
end

# @private
class RSpec::Mocks::ArgumentMatchers::AnyArgMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#150
  def ===(_other); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#154
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::AnyArgMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgMatcher)

# @private
class RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#143
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::AnyArgsMatcher)

# @private
class RSpec::Mocks::ArgumentMatchers::ArrayIncludingMatcher
  # @return [ArrayIncludingMatcher] a new instance of ArrayIncludingMatcher
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#233
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#237
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#248
  def description; end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#254
  def formatted_expected_values; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # @return [BaseHashMatcher] a new instance of BaseHashMatcher
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#179
  def initialize(expected); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#183
  def ===(predicate, actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#191
  def description(name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#197
  def formatted_expected_hash; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::BooleanMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#168
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#172
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::BooleanMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::BooleanMatcher)

# @private
class RSpec::Mocks::ArgumentMatchers::DuckTypeMatcher
  # @return [DuckTypeMatcher] a new instance of DuckTypeMatcher
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#263
  def initialize(*methods_to_respond_to); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#267
  def ===(value); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#271
  def description; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::HashExcludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#222
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#226
  def description; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::HashIncludingMatcher < ::RSpec::Mocks::ArgumentMatchers::BaseHashMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#211
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#215
  def description; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::InstanceOf
  # @return [InstanceOf] a new instance of InstanceOf
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#278
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#282
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#286
  def description; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::KindOf
  # @return [KindOf] a new instance of KindOf
  #
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#293
  def initialize(klass); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#297
  def ===(actual); end

  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#301
  def description; end
end

# @private
class RSpec::Mocks::ArgumentMatchers::NoArgsMatcher < ::RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#161
  def description; end
end

# source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#137
RSpec::Mocks::ArgumentMatchers::NoArgsMatcher::INSTANCE = T.let(T.unsafe(nil), RSpec::Mocks::ArgumentMatchers::NoArgsMatcher)

# Intended to be subclassed by stateless, immutable argument matchers.
# Provides a `<klass name>::INSTANCE` constant for accessing a global
# singleton instance of the matcher. There is no need to construct
# multiple instance since there is no state. It also facilities the
# special case logic we need for some of these matchers, by making it
# easy to do comparisons like: `[klass::INSTANCE] == args` rather than
# `args.count == 1 && klass === args.first`.
#
# @private
class RSpec::Mocks::ArgumentMatchers::SingletonMatcher
  class << self
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/argument_matchers.rb#136
    def inherited(subklass); end

    private

    def new(*_arg0); end
  end
end

# @private
class RSpec::Mocks::CallbackInvocationStrategy
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#8
  def call(doubled_module); end
end

# Raised for situations that RSpec cannot support due to mutations made
# externally on arguments that RSpec is holding onto to use for later
# comparisons.
#
# @deprecated We no longer raise this error but the constant remains until
#   RSpec 4 for SemVer reasons.
class RSpec::Mocks::CannotSupportArgMutationsError < ::StandardError; end

# When a class's `.new` method is stubbed, we want to use the method
# signature from `#initialize` because `.new`'s signature is a generic
# `def new(*args)` and it simply delegates to `#initialize` and forwards
# all args...so the method with the actually used signature is `#initialize`.
#
# This method reference implementation handles that specific case.
#
# @private
class RSpec::Mocks::ClassNewMethodReference < ::RSpec::Mocks::ObjectMethodReference
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#207
  def with_signature; end

  class << self
    # @return [Boolean]
    #
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#185
    def applies_to?(method_name); end

    # Ruby 2's Method#== is too strict
    #
    # @return [Boolean]
    #
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#198
    def uses_class_new?(klass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/method_reference.rb#196
RSpec::Mocks::ClassNewMethodReference::CLASS_NEW = T.let(T.unsafe(nil), UnboundMethod)

# Effectively the same as an ObjectVerifyingDouble (since a class is a type
# of object), except with Module in the inheritance chain so that
# transferring nested constants to work.
#
# @private
class RSpec::Mocks::ClassVerifyingDouble < ::Module
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble
  include ::RSpec::Mocks::ObjectVerifyingDoubleMethods
end

# Provides configuration options for rspec-mocks.
class RSpec::Mocks::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#5
  def initialize; end

  # Adds `stub` and `should_receive` to the given
  # modules or classes. This is usually only necessary
  # if you application uses some proxy classes that
  # "strip themselves down" to a bare minimum set of
  # methods and remove `stub` and `should_receive` in
  # the process.
  #
  # @example
  #   RSpec.configure do |rspec|
  #   rspec.mock_with :rspec do |mocks|
  #   mocks.add_stub_and_should_receive_to Delegator
  #   end
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#62
  def add_stub_and_should_receive_to(*modules); end

  # Sets whether RSpec will warn, ignore, or fail a test when
  # expectations are set on nil.
  # By default, when this flag is not set, warning messages are issued when
  # expectations are set on nil. This is to prevent false-positives and to
  # catch potential bugs early on.
  # When set to `true`, warning messages are suppressed.
  # When set to `false`, it will raise an error.
  #
  # @example
  #   RSpec.configure do |config|
  #   config.mock_with :rspec do |mocks|
  #   mocks.allow_message_expectations_on_nil = false
  #   end
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#29
  def allow_message_expectations_on_nil; end

  # Sets whether RSpec will warn, ignore, or fail a test when
  # expectations are set on nil.
  # By default, when this flag is not set, warning messages are issued when
  # expectations are set on nil. This is to prevent false-positives and to
  # catch potential bugs early on.
  # When set to `true`, warning messages are suppressed.
  # When set to `false`, it will raise an error.
  #
  # @example
  #   RSpec.configure do |config|
  #   config.mock_with :rspec do |mocks|
  #   mocks.allow_message_expectations_on_nil = false
  #   end
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#29
  def allow_message_expectations_on_nil=(_arg0); end

  # Provides a way to perform customisations when verifying doubles.
  #
  # @example
  #   RSpec::Mocks.configuration.before_verifying_doubles do |ref|
  #   ref.some_method!
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#128
  def before_verifying_doubles(&block); end

  # Indicates whether or not diffs should be colored.
  # Delegates to rspec-core's color option if rspec-core
  # is loaded; otherwise you can set it here.
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#164
  def color?; end

  # Monkey-patch `Marshal.dump` to enable dumping of mocked or stubbed
  # objects. By default this will not work since RSpec mocks works by
  # adding singleton methods that cannot be serialized. This patch removes
  # these singleton methods before serialization. Setting to falsey removes
  # the patch.
  #
  # This method is idempotent.
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#188
  def patch_marshal_to_support_partial_doubles=(val); end

  # Resets the configured syntax to the default.
  #
  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#198
  def reset_syntaxes_to_default; end

  # Returns an array with a list of syntaxes
  # that are enabled.
  #
  # @example
  #   unless RSpec::Mocks.configuration.syntax.include?(:expect)
  #   raise "this RSpec extension gem requires the rspec-mocks `:expect` syntax"
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#104
  def syntax; end

  # Provides the ability to set either `expect`,
  # `should` or both syntaxes. RSpec uses `expect`
  # syntax by default. This is needed if you want to
  # explicitly enable `should` syntax and/or explicitly
  # disable `expect` syntax.
  #
  #  end
  #
  # @example
  #   RSpec.configure do |rspec|
  #   rspec.mock_with :rspec do |mocks|
  #   mocks.syntax = [:expect, :should]
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#81
  def syntax=(*values); end

  # Used to track wether we are temporarily suppressing verifying partial
  # doubles with `without_partial_double_verification { ... }`
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#161
  def temporarily_suppress_partial_double_verification; end

  # Used to track wether we are temporarily suppressing verifying partial
  # doubles with `without_partial_double_verification { ... }`
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#161
  def temporarily_suppress_partial_double_verification=(_arg0); end

  # Sets the default for the `transfer_nested_constants` option when
  # stubbing constants.
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#145
  def transfer_nested_constants=(_arg0); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#139
  def transfer_nested_constants?; end

  # When this is set to true, an error will be raised when
  # `instance_double` or `class_double` is given the name of an undefined
  # constant. You probably only want to set this when running your entire
  # test suite, with all production code loaded. Setting this for an
  # isolated unit test will prevent you from being able to isolate it!
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#120
  def verify_doubled_constant_names=(_arg0); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#111
  def verify_doubled_constant_names?; end

  # When set to true, partial mocks will be verified the same as object
  # doubles. Any stubs will have their arguments checked against the original
  # method, and methods that do not exist cannot be stubbed.
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#150
  def verify_partial_doubles=(val); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#154
  def verify_partial_doubles?; end

  # Returns an array of blocks to call when verifying doubles
  #
  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#135
  def verifying_double_callbacks; end

  # Provides a way to perform customisations when verifying doubles.
  #
  # @example
  #   RSpec::Mocks.configuration.before_verifying_doubles do |ref|
  #   ref.some_method!
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#128
  def when_declaring_verifying_double(&block); end

  # Sets whether or not RSpec will yield the receiving instance of a
  # message to blocks that are used for any_instance stub implementations.
  # When set, the first yielded argument will be the receiving instance.
  # Defaults to `true`.
  #
  # @example
  #   RSpec.configure do |rspec|
  #   rspec.mock_with :rspec do |mocks|
  #   mocks.yield_receiver_to_any_instance_implementation_blocks = false
  #   end
  #   end
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#46
  def yield_receiver_to_any_instance_implementation_blocks=(_arg0); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/configuration.rb#31
  def yield_receiver_to_any_instance_implementation_blocks?; end
end

# Provides information about constants that may (or may not)
# have been mutated by rspec-mocks.
class RSpec::Mocks::Constant
  extend ::RSpec::Support::RecursiveConstMethods

  # @api private
  # @return [Constant] a new instance of Constant
  # @yield [_self]
  # @yieldparam _self [RSpec::Mocks::Constant] the object that the method was called on
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#11
  def initialize(name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def hidden=(_arg0); end

  # @return [Boolean] Whether or not rspec-mocks has hidden
  #   this constant.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#51
  def hidden?; end

  # The default `to_s` isn't very useful, so a custom version is provided.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#62
  def inspect; end

  # @return [Boolean] Whether or not rspec-mocks has mutated
  #   (stubbed or hidden) this constant.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#39
  def mutated?; end

  # @return [String] The fully qualified name of the constant.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#21
  def name; end

  # @return [Object, nil] The original value (e.g. before it
  #   was mutated by rspec-mocks) of the constant, or
  #   nil if the constant was not previously defined.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#26
  def original_value; end

  # @return [Object, nil] The original value (e.g. before it
  #   was mutated by rspec-mocks) of the constant, or
  #   nil if the constant was not previously defined.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#26
  def original_value=(_arg0); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def previously_defined=(_arg0); end

  # @return [Boolean] Whether or not the constant was defined
  #   before the current example.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#33
  def previously_defined?; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def stubbed=(_arg0); end

  # @return [Boolean] Whether or not rspec-mocks has stubbed
  #   this constant.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#45
  def stubbed?; end

  # The default `to_s` isn't very useful, so a custom version is provided.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#62
  def to_s; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#29
  def valid_name=(_arg0); end

  # @return [Boolean] Whether or not the provided constant name
  #   is a valid Ruby constant name.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#57
  def valid_name?; end

  class << self
    # Queries rspec-mocks to find out information about the named constant.
    #
    # @param name [String] the name of the constant
    # @return [Constant] an object contaning information about the named
    #   constant.
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#86
    def original(name); end

    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#68
    def unmutated(name); end
  end
end

# Provides a means to stub constants.
class RSpec::Mocks::ConstantMutator
  extend ::RSpec::Support::RecursiveConstMethods

  class << self
    # Hides a constant.
    #
    # @note It's recommended that you use `hide_const` in your
    #   examples. This is an alternate public API that is provided
    #   so you can hide constants in other contexts (e.g. helper
    #   classes).
    # @param constant_name [String] The fully qualified name of the constant.
    #   The current constant scoping at the point of call is not considered.
    # @see ExampleMethods#hide_const
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#131
    def hide(constant_name); end

    # Uses the mutator to mutate (stub or hide) a constant. Ensures that
    # the mutator is correctly registered so it can be backed out at the end
    # of the test.
    #
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#320
    def mutate(mutator); end

    # Used internally by the constant stubbing to raise a helpful
    # error when a constant like "A::B::C" is stubbed and A::B is
    # not a module (and thus, it's impossible to define "A::B::C"
    # since only modules can have nested constants).
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#331
    def raise_on_invalid_const; end

    # Stubs a constant.
    #
    # @note It's recommended that you use `stub_const` in your
    #   examples. This is an alternate public API that is provided
    #   so you can stub constants in other contexts (e.g. helper
    #   classes).
    # @option options
    # @param constant_name [String] The fully qualified name of the constant. The current
    #   constant scoping at the point of call is not considered.
    # @param value [Object] The value to make the constant refer to. When the
    #   example completes, the constant will be restored to its prior state.
    # @param options [Hash] Stubbing options.
    # @return [Object] the stubbed value of the constant
    # @see ExampleMethods#stub_const
    #
    # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#107
    def stub(constant_name, value, options = T.unsafe(nil)); end
  end
end

# Contains common functionality used by all of the constant mutators.
#
# @private
class RSpec::Mocks::ConstantMutator::BaseMutator
  include ::RSpec::Support::RecursiveConstMethods

  # @return [BaseMutator] a new instance of BaseMutator
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#144
  def initialize(full_constant_name, mutated_value, transfer_nested_constants); end

  # Returns the value of attribute full_constant_name.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#142
  def full_constant_name; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#160
  def idempotently_reset; end

  # Returns the value of attribute original_value.
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#142
  def original_value; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#153
  def to_constant; end
end

# Hides a defined constant for the duration of an example.
#
# @private
class RSpec::Mocks::ConstantMutator::ConstantHider < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#170
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#188
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#178
  def to_constant; end
end

# Replaces a defined constant for the duration of an example.
#
# @private
class RSpec::Mocks::ConstantMutator::DefinedConstantReplacer < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # @return [DefinedConstantReplacer] a new instance of DefinedConstantReplacer
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#198
  def initialize(*args); end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#203
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#223
  def reset; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#268
  def should_transfer_nested_constants?; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#215
  def to_constant; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#232
  def transfer_nested_constants; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#238
  def verify_constants_to_transfer!; end
end

# Sets an undefined constant for the duration of an example.
#
# @private
class RSpec::Mocks::ConstantMutator::UndefinedConstantSetter < ::RSpec::Mocks::ConstantMutator::BaseMutator
  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#279
  def mutate; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#299
  def reset; end

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#291
  def to_constant; end

  private

  # source://rspec-mocks//lib/rspec/mocks/mutate_const.rb#305
  def name_for(parent, name); end
end

# @private
#
# source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#104
RSpec::Mocks::DEFAULT_CALLBACK_INVOCATION_STRATEGY = T.let(T.unsafe(nil), RSpec::Mocks::CallbackInvocationStrategy)

# An implementation of rspec-mocks' reference interface.
# Used when an object is passed to {ExampleMethods#object_double}, or
# an anonymous class or module is passed to {ExampleMethods#instance_double}
# or {ExampleMethods#class_double}.
# Represents a reference to that object.
#
# @see NamedObjectReference
class RSpec::Mocks::DirectObjectReference
  # @param object [Object] the object to which this refers
  # @return [DirectObjectReference] a new instance of DirectObjectReference
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#58
  def initialize(object); end

  # Defined for interface parity with the other object reference
  # implementations. Raises an `ArgumentError` to indicate that `as_stubbed_const`
  # is invalid when passing an object argument to `object_double`.
  #
  # @raise [ArgumentError]
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#70
  def const_to_replace; end

  # Always returns true for an object as the class is defined.
  #
  # @return [true]
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#85
  def defined?; end

  # @return [String] the object's description (via `#inspect`).
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#63
  def description; end

  # The target of the verifying double (the object itself).
  #
  # @return [Object]
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#78
  def target; end

  # Yields if the reference target is loaded, providing a generic mechanism
  # to optionally run a bit of code only when a reference's target is
  # loaded.
  #
  # This specific implementation always yields because direct references
  # are always loaded.
  #
  # @yield [Object] the target of this reference.
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#97
  def when_loaded; end
end

# A generic test double object. `double`, `instance_double` and friends
# return an instance of this.
class RSpec::Mocks::Double
  include ::RSpec::Mocks::TestDouble
end

# @private
class RSpec::Mocks::ErrorGenerator
  # @return [ErrorGenerator] a new instance of ErrorGenerator
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#39
  def initialize(target = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#71
  def default_error_message(expectation, expected_args, actual_args); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#132
  def describe_expectation(verb, message, expected_received_count, _actual_received_count, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#215
  def expectation_on_nil_message(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#222
  def intro(unwrapped = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#235
  def method_call_args_description(args, generic_prefix = T.unsafe(nil), matcher_prefix = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#44
  def opts; end

  # Sets the attribute opts
  #
  # @param value the value to set the attribute opts to.
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#37
  def opts=(_arg0); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#203
  def raise_already_invoked_error(message, calling_customization); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#193
  def raise_cant_constrain_count_for_negated_have_received_error(count_constraint); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#170
  def raise_double_negation_error(wrapped_expression); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#77
  def raise_expectation_error(message, expected_received_count, argument_list_matcher, actual_received_count, expectation_count_type, args, backtrace_line = T.unsafe(nil), source_id = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#164
  def raise_expectation_on_mocked_method(method); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#211
  def raise_expectation_on_nil_error(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#158
  def raise_expectation_on_unstubbed_method(method); end

  # @private
  # @raise [ExpiredTestDoubleError]
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#123
  def raise_expired_test_double_error; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#187
  def raise_have_received_disallowed(type, reason); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#118
  def raise_invalid_arguments_error(verifier); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#198
  def raise_method_not_stubbed_error(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#142
  def raise_missing_block_error(args_to_yield); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#59
  def raise_missing_default_stub_error(expectation, args_for_multiple_calls); end

  # @private
  # @raise [NoMethodError]
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#111
  def raise_non_public_error(method_name, visibility); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#152
  def raise_only_valid_on_a_partial_double(method); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#137
  def raise_out_of_order_error(message); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#67
  def raise_similar_message_args_error(expectation, args_for_multiple_calls, backtrace_line = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#54
  def raise_unexpected_message_args_error(expectation, args_for_multiple_calls, source_id = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#49
  def raise_unexpected_message_error(message, args); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#87
  def raise_unimplemented_error(doubled_module, method_name, object); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#178
  def raise_verifying_double_not_defined_error(ref); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#147
  def raise_wrong_arity_error(args_to_yield, signature); end

  private

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#318
  def __raise(message, backtrace_line = T.unsafe(nil), source_id = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#346
  def arg_list(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#356
  def count_message(count, expectation_count_type = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#292
  def diff_message(expected_args, actual_args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#314
  def differ; end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#268
  def error_message(expectation, args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#257
  def expected_part_of_expectation_error(expected_received_count, expectation_count_type, argument_list_matcher); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#341
  def format_args(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#350
  def format_received_args(args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#370
  def group_count(index, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#366
  def grouped_args(args); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#310
  def list_of_exactly_one_string?(args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#337
  def notify(*args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#332
  def prepend_to_backtrace(exception, line); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#250
  def received_part_of_expectation_error(actual_received_count, args); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#362
  def times(count); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#264
  def unexpected_arguments_message(expected_args_string, actual_args_string); end

  # source://rspec-mocks//lib/rspec/mocks/error_generator.rb#302
  def unpack_string_args(formatted_expected_args, actual_args); end
end

# Contains methods intended to be used from within code examples.
# Mix this in to your test context (such as a test framework base class)
# to use rspec-mocks with your test framework. If you're using rspec-core,
# it'll take care of doing this for you.
module RSpec::Mocks::ExampleMethods
  include ::RSpec::Mocks::ArgumentMatchers
  include ::RSpec::Mocks::ExampleMethods::ExpectHost

  # Used to wrap an object in preparation for stubbing a method
  # on it.
  #
  # @example
  #   allow(dbl).to receive(:foo).with(5).and_return(:return_value)
  # @note If you disable the `:expect` syntax this method will be undefined.
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#128
  def allow(target); end

  # Used to wrap a class in preparation for stubbing a method
  # on instances of it.
  #
  # @example
  #   allow_any_instance_of(MyClass).to receive(:foo)
  # @note This is only available when you have enabled the `expect` syntax.
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#136
  def allow_any_instance_of(klass); end

  # Disables warning messages about expectations being set on nil.
  #
  # By default warning messages are issued when expectations are set on
  # nil.  This is to prevent false-positives and to catch potential bugs
  # early on.
  #
  # @deprecated Use {RSpec::Mocks::Configuration#allow_message_expectations_on_nil} instead.
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#201
  def allow_message_expectations_on_nil; end

  # Constructs a test double against a specific class. If the given class
  # name has been loaded, only class methods defined on the class are
  # allowed to be stubbed. In all other ways it behaves like a
  # [double](double).
  #
  # @overload class_double
  # @overload class_double
  # @overload class_double
  # @overload class_double
  # @return ClassVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#79
  def class_double(doubled_class, *args); end

  # Constructs a test double that is optimized for use with `have_received`
  # against a specific class. If the given class name has been loaded,
  # only class methods defined on the class are allowed to be stubbed.
  # With a normal double one has to stub methods in order to be able to spy
  # them. An class_spy automatically spies on all class methods to which the
  # class responds.
  #
  # @overload class_spy
  # @overload class_spy
  # @overload class_spy
  # @overload class_spy
  # @return ClassVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#191
  def class_spy(*args); end

  # Constructs an instance of [RSpec::Mocks::Double](RSpec::Mocks::Double) configured
  # with an optional name, used for reporting in failure messages, and an optional
  # hash of message/return-value pairs.
  #
  # @example
  #   book = double("book", :title => "The RSpec Book")
  #   book.title #=> "The RSpec Book"
  #
  #   card = double("card", :suit => "Spades", :rank => "A")
  #   card.suit  #=> "Spades"
  #   card.rank  #=> "A"
  # @overload double
  # @overload double
  # @overload double
  # @overload double
  # @return [Double]
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#34
  def double(*args); end

  # Used to wrap a class in preparation for setting a mock expectation
  # on instances of it.
  #
  # @example
  #   expect_any_instance_of(MyClass).to receive(:foo)
  # @note If you disable the `:expect` syntax this method will be undefined.
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#132
  def expect_any_instance_of(klass); end

  # Verifies that the given object received the expected message during the
  # course of the test. On a spy objects or as null object doubles this
  # works for any method, on other objects the method must have
  # been stubbed beforehand in order for messages to be verified.
  #
  # Stubbing and verifying messages received in this way implements the
  # Test Spy pattern.
  #
  # @example
  #   invitation = double('invitation', accept: true)
  #   user.accept_invitation(invitation)
  #   expect(invitation).to have_received(:accept)
  #
  #   # You can also use most message expectations:
  #   expect(invitation).to have_received(:accept).with(mailer).once
  # @note `have_received(...).with(...)` is unable to work properly when
  #   passed arguments are mutated after the spy records the received message.
  # @param method_name [Symbol] name of the method expected to have been
  #   called.
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#281
  def have_received(method_name, &block); end

  # Hides the named constant with the given value. The constant will be
  # undefined for the duration of the test.
  #
  # Like method stubs, the constant will be restored to its original value
  # when the example completes.
  #
  # @example
  #   hide_const("MyClass") # => MyClass is now an undefined constant
  # @param constant_name [String] The fully qualified name of the constant.
  #   The current constant scoping at the point of call is not considered.
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#256
  def hide_const(constant_name); end

  # Constructs a test double against a specific class. If the given class
  # name has been loaded, only instance methods defined on the class are
  # allowed to be stubbed. In all other ways it behaves like a
  # [double](double).
  #
  # @overload instance_double
  # @overload instance_double
  # @overload instance_double
  # @overload instance_double
  # @return InstanceVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#56
  def instance_double(doubled_class, *args); end

  # Constructs a test double that is optimized for use with `have_received`
  # against a specific class. If the given class name has been loaded, only
  # instance methods defined on the class are allowed to be stubbed.  With
  # a normal double one has to stub methods in order to be able to spy
  # them. An instance_spy automatically spies on all instance methods to
  # which the class responds.
  #
  # @overload instance_spy
  # @overload instance_spy
  # @overload instance_spy
  # @overload instance_spy
  # @return InstanceVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#144
  def instance_spy(*args); end

  # Constructs a test double against a specific object. Only the methods
  # the object responds to are allowed to be stubbed. If a String argument
  # is provided, it is assumed to reference a constant object which is used
  # for verification. In all other ways it behaves like a [double](double).
  #
  # @overload object_double
  # @overload object_double
  # @overload object_double
  # @overload object_double
  # @return ObjectVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#102
  def object_double(object_or_name, *args); end

  # Constructs a test double that is optimized for use with `have_received`
  # against a specific object. Only instance methods defined on the object
  # are allowed to be stubbed.  With a normal double one has to stub
  # methods in order to be able to spy them. An object_spy automatically
  # spies on all methods to which the object responds.
  #
  # @overload object_spy
  # @overload object_spy
  # @overload object_spy
  # @overload object_spy
  # @return ObjectVerifyingDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#167
  def object_spy(*args); end

  # Used to specify a message that you expect or allow an object
  # to receive. The object returned by `receive` supports the same
  # fluent interface that `should_receive` and `stub` have always
  # supported, allowing you to constrain the arguments or number of
  # times, and configure how the object should respond to the message.
  #
  # @example
  #   expect(obj).to receive(:hello).with("world").exactly(3).times
  # @note If you disable the `:expect` syntax this method will be undefined.
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#114
  def receive(method_name, &block); end

  # stubs/mocks a chain of messages on an object or test double.
  #
  # ## Warning:
  #
  # Chains can be arbitrarily long, which makes it quite painless to
  # violate the Law of Demeter in violent ways, so you should consider any
  # use of `receive_message_chain` a code smell. Even though not all code smells
  # indicate real problems (think fluent interfaces), `receive_message_chain` still
  # results in brittle examples.  For example, if you write
  # `allow(foo).to receive_message_chain(:bar, :baz => 37)` in a spec and then the
  # implementation calls `foo.baz.bar`, the stub will not work.
  #
  # @example
  #   allow(double).to receive_message_chain("foo.bar") { :baz }
  #   allow(double).to receive_message_chain(:foo, :bar => :baz)
  #   allow(double).to receive_message_chain(:foo, :bar) { :baz }
  #
  #   # Given any of ^^ these three forms ^^:
  #   double.foo.bar # => :baz
  #
  #   # Common use in Rails/ActiveRecord:
  #   allow(Article).to receive_message_chain("recent.published") { [Article.new] }
  # @note If you disable the `:expect` syntax this method will be undefined.
  # @overload receive_message_chain
  # @overload receive_message_chain
  # @overload receive_message_chain
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#124
  def receive_message_chain(*messages, &block); end

  # Shorthand syntax used to setup message(s), and their return value(s),
  # that you expect or allow an object to receive. The method takes a hash
  # of messages and their respective return values. Unlike with `receive`,
  # you cannot apply further customizations using a block or the fluent
  # interface.
  #
  # @example
  #   allow(obj).to receive_messages(:speak => "Hello World")
  #   allow(obj).to receive_messages(:speak => "Hello", :meow => "Meow")
  # @note If you disable the `:expect` syntax this method will be undefined.
  #
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#118
  def receive_messages(message_return_value_hash); end

  # Constructs a test double that is optimized for use with
  # `have_received`. With a normal double one has to stub methods in order
  # to be able to spy them. A spy automatically spies on all methods.
  #
  # @overload spy
  # @overload spy
  # @overload spy
  # @overload spy
  # @return [Double]
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#120
  def spy(*args); end

  # Stubs the named constant with the given value.
  # Like method stubs, the constant will be restored
  # to its original value (or lack of one, if it was
  # undefined) when the example completes.
  #
  # @example
  #   stub_const("MyClass", Class.new) # => Replaces (or defines) MyClass with a new class object.
  #   stub_const("SomeModel::PER_PAGE", 5) # => Sets SomeModel::PER_PAGE to 5.
  #
  #   class CardDeck
  #   SUITS = [:Spades, :Diamonds, :Clubs, :Hearts]
  #   NUM_CARDS = 52
  #   end
  #
  #   stub_const("CardDeck", Class.new)
  #   CardDeck::SUITS # => uninitialized constant error
  #   CardDeck::NUM_CARDS # => uninitialized constant error
  #
  #   stub_const("CardDeck", Class.new, :transfer_nested_constants => true)
  #   CardDeck::SUITS # => our suits array
  #   CardDeck::NUM_CARDS # => 52
  #
  #   stub_const("CardDeck", Class.new, :transfer_nested_constants => [:SUITS])
  #   CardDeck::SUITS # => our suits array
  #   CardDeck::NUM_CARDS # => uninitialized constant error
  # @option options
  # @param constant_name [String] The fully qualified name of the constant. The current
  #   constant scoping at the point of call is not considered.
  # @param value [Object] The value to make the constant refer to. When the
  #   example completes, the constant will be restored to its prior state.
  # @param options [Hash] Stubbing options.
  # @return [Object] the stubbed value of the constant
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#241
  def stub_const(constant_name, value, options = T.unsafe(nil)); end

  # Turns off the verifying of partial doubles for the duration of the
  # block, this is useful in situations where methods are defined at run
  # time and you wish to define stubs for them but not turn off partial
  # doubles for the entire run suite. (e.g. view specs in rspec-rails).
  #
  # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#289
  def without_partial_double_verification; end

  class << self
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#423
    def declare_double(type, *args); end

    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#408
    def declare_verifying_double(type, ref, *args); end

    # @private
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#401
    def extended(object); end

    # @private
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/example_methods.rb#392
    def included(klass); end
  end
end

# This module exists to host the `expect` method for cases where
# rspec-mocks is used w/o rspec-expectations.
module RSpec::Mocks::ExampleMethods::ExpectHost
  # source://rspec-mocks//lib/rspec/mocks/syntax.rb#142
  def expect(target); end
end

# @private
class RSpec::Mocks::ExpectChain < ::RSpec::Mocks::MessageChain
  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#69
  def expectation(object, message, &return_block); end

  class << self
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#63
    def expect_chain_on(object, *chain, &blk); end
  end
end

# @private
class RSpec::Mocks::ExpectationTarget < ::RSpec::Mocks::TargetBase
  include ::RSpec::Mocks::ExpectationTargetMethods
end

# @private
module RSpec::Mocks::ExpectationTargetMethods
  include ::RSpec::Mocks::TargetDelegationInstanceMethods
  extend ::RSpec::Mocks::TargetDelegationClassMethods

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#81
  def expression; end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def not_to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#6
  def to(matcher, &block); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#16
  def to_not(matcher, &block); end
end

# Raised when a test double is used after it has been torn
# down (typically at the end of an rspec-core example).
class RSpec::Mocks::ExpiredTestDoubleError < ::RSpec::Mocks::MockExpectationError; end

# @private
#
# source://rspec-mocks//lib/rspec/mocks.rb#112
RSpec::Mocks::IGNORED_BACKTRACE_LINE = T.let(T.unsafe(nil), String)

# Represents a configured implementation. Takes into account
# any number of sub-implementations.
#
# @private
class RSpec::Mocks::Implementation
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#759
  def call(*args, **_arg1, &block); end

  # Returns the value of attribute initial_action.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def initial_action; end

  # Sets the attribute initial_action
  #
  # @param value the value to set the attribute initial_action to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def initial_action=(_arg0); end

  # Returns the value of attribute inner_action.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def inner_action; end

  # Sets the attribute inner_action
  #
  # @param value the value to set the attribute inner_action to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def inner_action=(_arg0); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#766
  def present?; end

  # Returns the value of attribute terminal_action.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def terminal_action; end

  # Sets the attribute terminal_action
  #
  # @param value the value to set the attribute terminal_action to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#757
  def terminal_action=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#772
  def actions; end
end

# @private
class RSpec::Mocks::InstanceMethodReference < ::RSpec::Mocks::MethodReference
  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#138
  def find_method(mod); end

  # Ideally, we'd use `respond_to?` for `method_implemented?` but we need a
  # reference to an instance to do that and we don't have one.  Note that
  # we may get false negatives: if the method is implemented via
  # `method_missing`, we'll return `false` even though it meets our
  # definition of "implemented". However, it's the best we can do.
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#116
  def method_defined?(mod); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#116
  def method_implemented?(mod); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#143
  def visibility_from(mod); end
end

# @private
class RSpec::Mocks::InstanceMethodStasher
  # @return [InstanceMethodStasher] a new instance of InstanceMethodStasher
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#5
  def initialize(object, method); end

  # ruby 2.0.0-p247 and 2.0.0-p195 both have a bug that we can't work around :(.
  # https://bugs.ruby-lang.org/issues/8686
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#91
  def handle_restoration_failures; end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#49
  def method_is_stashed?; end

  # Returns the value of attribute original_method.
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#14
  def original_method; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#61
  def restore; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#54
  def stash; end

  private

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#100
  def method_defined_directly_on_klass?; end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#105
  def method_defined_on_klass?(klass = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/instance_method_stasher.rb#109
  def method_owned_by_klass?; end
end

# A mock providing a custom proxy that can verify the validity of any
# method stubs or expectations against the public instance methods of the
# given class.
#
# @private
class RSpec::Mocks::InstanceVerifyingDouble
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#73
  def __build_mock_proxy(order_group); end
end

# Support for `patch_marshal_to_support_partial_doubles` configuration.
#
# @private
class RSpec::Mocks::MarshalExtension
  class << self
    # source://rspec-mocks//lib/rspec/mocks/marshal_extension.rb#7
    def patch!; end

    # source://rspec-mocks//lib/rspec/mocks/marshal_extension.rb#27
    def unpatch!; end
  end
end

# Namespace for mock-related matchers.
module RSpec::Mocks::Matchers; end

# @private
class RSpec::Mocks::Matchers::ExpectationCustomization
  # @return [ExpectationCustomization] a new instance of ExpectationCustomization
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#8
  def initialize(method_name, args, block); end

  # Returns the value of attribute block.
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#6
  def block; end

  # Sets the attribute block
  #
  # @param value the value to set the attribute block to.
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#6
  def block=(_arg0); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/expectation_customization.rb#14
  def playback_onto(expectation); end
end

# @private
class RSpec::Mocks::Matchers::HaveReceived
  include ::RSpec::Mocks::Matchers::Matcher

  # @return [HaveReceived] a new instance of HaveReceived
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#12
  def initialize(method_name, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def at_least(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def at_most(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#48
  def description; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#32
  def does_not_match?(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def exactly(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#40
  def failure_message; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#44
  def failure_message_when_negated; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#23
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#19
  def name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def once(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def ordered(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#67
  def setup_allowance(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#71
  def setup_any_instance_allowance(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#75
  def setup_any_instance_expectation(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#79
  def setup_any_instance_negative_expectation(_subject, &_block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#59
  def setup_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#63
  def setup_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def thrice(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def time(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def times(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def twice(*args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#53
  def with(*args); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#95
  def apply_constraints_to(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#112
  def capture_failure_message; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#106
  def count_constraint; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#85
  def disallow(type, reason = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#101
  def ensure_count_unconstrained; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#89
  def expect; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#123
  def expected_messages_received_in_order?; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#128
  def mock_proxy; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#118
  def notify_failure_message; end
end

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#9
RSpec::Mocks::Matchers::HaveReceived::ARGS_CONSTRAINTS = T.let(T.unsafe(nil), Array)

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#10
RSpec::Mocks::Matchers::HaveReceived::CONSTRAINTS = T.let(T.unsafe(nil), Array)

# source://rspec-mocks//lib/rspec/mocks/matchers/have_received.rb#8
RSpec::Mocks::Matchers::HaveReceived::COUNT_CONSTRAINTS = T.let(T.unsafe(nil), Array)

# just a "tag" for rspec-mock matchers detection
#
# @private
module RSpec::Mocks::Matchers::Matcher; end

# @private
class RSpec::Mocks::Matchers::Receive
  include ::RSpec::Mocks::Matchers::Matcher

  # @return [Receive] a new instance of Receive
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#10
  def initialize(message, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_call_original(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_invoke(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_raise(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_return(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_throw(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_wrap_original(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def and_yield(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def at_least(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def at_most(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#20
  def description; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#30
  def does_not_match?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def exactly(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#24
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#16
  def name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def never(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def once(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def ordered(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#41
  def setup_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#54
  def setup_any_instance_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#46
  def setup_any_instance_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#50
  def setup_any_instance_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#24
  def setup_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#30
  def setup_negative_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def thrice(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def time(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def times(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def twice(*args, **_arg1, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#61
  def with(*args, **_arg1, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#70
  def describable; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#107
  def move_block_to_last_customization(block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#90
  def setup_any_instance_method_substitute(subject, method, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#95
  def setup_method_substitute(host, method, block, *args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#85
  def setup_mock_proxy_method_substitute(subject, method, block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#74
  def warn_if_any_instance(expression, subject); end
end

# MessageExpectation objects are able to describe themselves in detail.
# We use this as a fall back when a MessageExpectation is not available.
#
# @private
class RSpec::Mocks::Matchers::Receive::DefaultDescribable
  # @return [DefaultDescribable] a new instance of DefaultDescribable
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#119
  def initialize(message); end

  # This is much simpler for the `any_instance` case than what the
  # user may want, but I'm not up for putting a bunch of effort
  # into full descriptions for `any_instance` expectations at this point :(.
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive.rb#126
  def description_for(verb); end
end

# @private
class RSpec::Mocks::Matchers::ReceiveMessageChain
  include ::RSpec::Mocks::Matchers::Matcher

  # @return [ReceiveMessageChain] a new instance of ReceiveMessageChain
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#10
  def initialize(chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_call_original(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_invoke(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_raise(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_return(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_throw(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def and_yield(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#27
  def description; end

  # @raise [NegationUnsupportedError]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#53
  def does_not_match?(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#48
  def matches?(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#23
  def name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#31
  def setup_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#36
  def setup_any_instance_allowance(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#42
  def setup_any_instance_expectation(subject, &block); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#48
  def setup_expectation(subject, &block); end

  # @raise [NegationUnsupportedError]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#53
  def setup_negative_expectation(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#17
  def with(*args, &block); end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#70
  def formatted_chain; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_message_chain.rb#64
  def replay_customizations(chain); end
end

# @private
class RSpec::Mocks::Matchers::ReceiveMessages
  include ::RSpec::Mocks::Matchers::Matcher

  # @return [ReceiveMessages] a new instance of ReceiveMessages
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#8
  def initialize(message_return_value_hash); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#17
  def description; end

  # @raise [NegationUnsupportedError]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#29
  def does_not_match?(_subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#21
  def matches?(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#13
  def name; end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#36
  def setup_allowance(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#50
  def setup_any_instance_allowance(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#43
  def setup_any_instance_expectation(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#21
  def setup_expectation(subject); end

  # @raise [NegationUnsupportedError]
  #
  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#29
  def setup_negative_expectation(_subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#55
  def warn_about_block; end

  private

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#65
  def any_instance_of(subject); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#69
  def each_message_on(host); end

  # source://rspec-mocks//lib/rspec/mocks/matchers/receive_messages.rb#61
  def proxy_on(subject); end
end

# @private
class RSpec::Mocks::MessageChain
  # @return [MessageChain] a new instance of MessageChain
  #
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#7
  def initialize(object, *chain, &blk); end

  # Returns the value of attribute block.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def block; end

  # Returns the value of attribute chain.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def chain; end

  # Returns the value of attribute object.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#5
  def object; end

  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#13
  def setup_chain; end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#33
  def chain_on(object, *chain, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#54
  def find_matching_expectation; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#49
  def find_matching_stub; end

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#38
  def format_chain(*chain, &blk); end
end

# Represents an individual method stub or message expectation. The methods
# defined here can be used to configure how it behaves. The methods return
# `self` so that they can be chained together to form a fluent interface.
class RSpec::Mocks::MessageExpectation
  include ::RSpec::Mocks::MessageExpectation::ImplementationDetails

  # Tells the object to delegate to the original unmodified method
  # when it receives the message.
  #
  # @example
  #   expect(counter).to receive(:increment).and_call_original
  #   original_count = counter.count
  #   counter.increment
  #   expect(counter.count).to eq(original_count + 1)
  # @note This is only available on partial doubles.
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#141
  def and_call_original; end

  # Tells the object to invoke a Proc when it receives the message. Given
  # more than one value, the result of the first Proc is returned the first
  # time the message is received, the result of the second Proc is returned
  # the next time, etc, etc.
  #
  # If the message is received more times than there are Procs, the result of
  # the last Proc is returned for every subsequent call.
  #
  # @example
  #   allow(api).to receive(:get_foo).and_invoke(-> { raise ApiTimeout })
  #   api.get_foo # => raises ApiTimeout
  #   api.get_foo # => raises ApiTimeout
  #
  #   allow(api).to receive(:get_foo).and_invoke(-> { raise ApiTimeout }, -> { raise ApiTimeout }, -> { :a_foo })
  #   api.get_foo # => raises ApiTimeout
  #   api.get_foo # => rasies ApiTimeout
  #   api.get_foo # => :a_foo
  #   api.get_foo # => :a_foo
  #   api.get_foo # => :a_foo
  #   # etc
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#109
  def and_invoke(first_proc, *procs); end

  # Tells the object to raise an exception when the message is received.
  #
  # @example
  #   allow(car).to receive(:go).and_raise
  #   allow(car).to receive(:go).and_raise(OutOfGas)
  #   allow(car).to receive(:go).and_raise(OutOfGas, "At least 2 oz of gas needed to drive")
  #   allow(car).to receive(:go).and_raise(OutOfGas.new(2, :oz))
  # @note When you pass an exception class, the MessageExpectation will raise
  #   an instance of it, creating it with `exception` and passing `message`
  #   if specified.  If the exception class initializer requires more than
  #   one parameters, you must pass in an instance and not the class,
  #   otherwise this method will raise an ArgumentError exception.
  # @overload and_raise
  # @overload and_raise
  # @overload and_raise
  # @overload and_raise
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#186
  def and_raise(*args); end

  # Tells the object to return a value when it receives the message.  Given
  # more than one value, the first value is returned the first time the
  # message is received, the second value is returned the next time, etc,
  # etc.
  #
  # If the message is received more times than there are values, the last
  # value is returned for every subsequent call.
  #
  # @example
  #   allow(counter).to receive(:count).and_return(1)
  #   counter.count # => 1
  #   counter.count # => 1
  #
  #   allow(counter).to receive(:count).and_return(1,2,3)
  #   counter.count # => 1
  #   counter.count # => 2
  #   counter.count # => 3
  #   counter.count # => 3
  #   counter.count # => 3
  #   # etc
  # @overload and_return
  # @overload and_return
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#71
  def and_return(first_value, *values); end

  # Tells the object to throw a symbol (with the object if that form is
  # used) when the message is received.
  #
  # @example
  #   allow(car).to receive(:go).and_throw(:out_of_gas)
  #   allow(car).to receive(:go).and_throw(:out_of_gas, :level => 0.1)
  # @overload and_throw
  # @overload and_throw
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#202
  def and_throw(*args); end

  # Decorates the stubbed method with the supplied block. The original
  # unmodified method is passed to the block along with any method call
  # arguments so you can delegate to it, whilst still being able to
  # change what args are passed to it and/or change the return value.
  #
  # @example
  #   expect(api).to receive(:large_list).and_wrap_original do |original_method, *args, &block|
  #   original_method.call(*args, &block).first(10)
  #   end
  # @note This is only available on partial doubles.
  # @return [nil] No further chaining is supported after this.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#162
  def and_wrap_original(&block); end

  # Tells the object to yield one or more args to a block when the message
  # is received.
  #
  # @example
  #   stream.stub(:open).and_yield(StringIO.new)
  # @return [MessageExpectation] self, to support further chaining.
  # @yield [@eval_context = Object.new]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#214
  def and_yield(*args, &block); end

  # Constrain a message expectation to be received at least a specific
  # number of times.
  #
  # @example
  #   expect(dealer).to receive(:deal_card).at_least(9).times
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#249
  def at_least(n, &block); end

  # Constrain a message expectation to be received at most a specific
  # number of times.
  #
  # @example
  #   expect(dealer).to receive(:deal_card).at_most(10).times
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#268
  def at_most(n, &block); end

  # Constrain a message expectation to be received a specific number of
  # times.
  #
  # @example
  #   expect(dealer).to receive(:deal_card).exactly(10).times
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#236
  def exactly(n, &block); end

  # @return [String] a nice representation of the message expectation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#396
  def inspect; end

  # Expect a message not to be received at all.
  #
  # @example
  #   expect(car).to receive(:stop).never
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#293
  def never; end

  # Expect a message to be received exactly one time.
  #
  # @example
  #   expect(car).to receive(:go).once
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#304
  def once(&block); end

  # Expect messages to be received in a specific order.
  #
  # @example
  #   expect(api).to receive(:prepare).ordered
  #   expect(api).to receive(:run).ordered
  #   expect(api).to receive(:finish).ordered
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#379
  def ordered(&block); end

  # Expect a message to be received exactly three times.
  #
  # @example
  #   expect(car).to receive(:go).thrice
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#326
  def thrice(&block); end

  # Syntactic sugar for `exactly`, `at_least` and `at_most`
  #
  # @example
  #   expect(dealer).to receive(:deal_card).exactly(10).times
  #   expect(dealer).to receive(:deal_card).at_least(10).times
  #   expect(dealer).to receive(:deal_card).at_most(10).times
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#282
  def time(&block); end

  # Syntactic sugar for `exactly`, `at_least` and `at_most`
  #
  # @example
  #   expect(dealer).to receive(:deal_card).exactly(10).times
  #   expect(dealer).to receive(:deal_card).at_least(10).times
  #   expect(dealer).to receive(:deal_card).at_most(10).times
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#282
  def times(&block); end

  # @return [String] a nice representation of the message expectation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#396
  def to_s; end

  # Expect a message to be received exactly two times.
  #
  # @example
  #   expect(car).to receive(:go).twice
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#315
  def twice(&block); end

  # Constrains a stub or message expectation to invocations with specific
  # arguments.
  #
  # With a stub, if the message might be received with other args as well,
  # you should stub a default value first, and then stub or mock the same
  # message using `with` to constrain to specific arguments.
  #
  # A message expectation will fail if the message is received with different
  # arguments.
  #
  # @example
  #   allow(cart).to receive(:add) { :failure }
  #   allow(cart).to receive(:add).with(Book.new(:isbn => 1934356379)) { :success }
  #   cart.add(Book.new(:isbn => 1234567890))
  #   # => :failure
  #   cart.add(Book.new(:isbn => 1934356379))
  #   # => :success
  #
  #   expect(cart).to receive(:add).with(Book.new(:isbn => 1934356379)) { :success }
  #   cart.add(Book.new(:isbn => 1234567890))
  #   # => failed expectation
  #   cart.add(Book.new(:isbn => 1934356379))
  #   # => passes
  # @return [MessageExpectation] self, to support further chaining.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#359
  def with(*args, **_arg1, &block); end
end

# Contains the parts of `MessageExpectation` that aren't part of
# rspec-mocks' public API. The class is very big and could really use
# some collaborators it delegates to for this stuff but for now this was
# the simplest way to split the public from private stuff to make it
# easier to publish the docs for the APIs we want published.
#
# @private
module RSpec::Mocks::MessageExpectation::ImplementationDetails
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#420
  def initialize(error_generator, expectation_ordering, expected_from, method_double, type = T.unsafe(nil), opts = T.unsafe(nil), &implementation_block); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#588
  def actual_received_count_matters?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#575
  def additional_expected_calls; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#532
  def advise(*args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#454
  def and_yield_receiver_to_implementation; end

  # Sets the attribute argument_list_matcher
  #
  # @param value the value to set the attribute argument_list_matcher to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def argument_list_matcher=(_arg0); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#487
  def called_max_times?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#564
  def description_for(verb); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#507
  def ensure_expected_ordering_received!; end

  # Returns the value of attribute error_generator.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def error_generator; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#558
  def expectation_count_type; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#450
  def expected_args; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#503
  def expected_messages_received?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#540
  def generate_error; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#512
  def ignoring_args?; end

  # Returns the value of attribute implementation.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def implementation; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#592
  def increase_actual_received_count!; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#473
  def invoke(parent_stub, *args, **_arg2, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#478
  def invoke_without_incrementing_received_count(parent_stub, *args, **_arg2, &block); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#463
  def matches?(message, *args, **_arg2); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#516
  def matches_at_least_count?; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#520
  def matches_at_most_count?; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#524
  def matches_exact_count?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#494
  def matches_name_but_not_args(message, *args); end

  # Returns the value of attribute message.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#411
  def message; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#483
  def negative?; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#584
  def negative_expectation_for?(message); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#580
  def ordered?; end

  # Returns the value of attribute orig_object.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#412
  def orig_object; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#571
  def raise_out_of_order_error; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#554
  def raise_unexpected_message_args_error(args_for_multiple_calls); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#468
  def safe_invoke(parent_stub, *args, **_arg2, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#528
  def similar_messages; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#417
  def type; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#536
  def unadvise(args); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#498
  def verify_messages_received; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#459
  def yield_receiver_to_implementation_block?; end

  protected

  # Sets the attribute error_generator
  #
  # @param value the value to set the attribute error_generator to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def error_generator=(_arg0); end

  # Sets the attribute expected_from
  #
  # @param value the value to set the attribute expected_from to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def expected_from=(_arg0); end

  # Sets the attribute expected_received_count
  #
  # @param value the value to set the attribute expected_received_count to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#413
  def expected_received_count=(_arg0); end

  # Sets the attribute implementation
  #
  # @param value the value to set the attribute implementation to.
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#410
  def implementation=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#600
  def exception_source_id; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#632
  def has_been_invoked?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#655
  def initial_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#659
  def inner_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#604
  def invoke_incrementing_actual_calls_by(increment, allowed_to_fail, parent_stub, *args, **_arg4, &block); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#636
  def raise_already_invoked_error_if_necessary(calling_customization); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#642
  def set_expected_received_count(relativity, n); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#665
  def terminal_implementation_action=(action); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#669
  def warn_about_stub_override; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#676
  def wrap_original(method_name, &block); end
end

# @private
class RSpec::Mocks::MethodDouble
  # @private
  # @return [MethodDouble] a new instance of MethodDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#9
  def initialize(object, method_name, proxy); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#191
  def add_default_stub(*args, &implementation); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#141
  def add_expectation(error_generator, expectation_ordering, expected_from, opts, &implementation); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#177
  def add_simple_expectation(method_name, response, error_generator, backtrace_line); end

  # A simple stub can only return a concrete value for a message, and
  # cannot match on arguments. It is used as an optimization over
  # `add_stub` / `add_expectation` where it is known in advance that this
  # is all that will be required of a stub, such as when passing attributes
  # to the `double` example method. They do not stash or restore existing method
  # definitions.
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#172
  def add_simple_stub(method_name, response); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#156
  def add_stub(error_generator, expectation_ordering, expected_from, opts = T.unsafe(nil), &implementation); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#150
  def build_expectation(error_generator, expectation_ordering); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#127
  def clear; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#51
  def configure_method; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#58
  def define_proxy_method; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
  def expectations; end

  # The type of message expectation to create has been extracted to its own
  # method so that subclasses can override it.
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#136
  def message_expectation_class; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
  def method_name; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
  def method_stasher; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
  def object; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#46
  def object_singleton_class; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#21
  def original_implementation_callable; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#34
  def original_method; end

  # The implementation of the proxied method. Subclasses may override this
  # method to perform additional operations.
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#79
  def proxy_method_invoked(_obj, *args, **_arg2, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#208
  def raise_method_not_stubbed_error; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#197
  def remove_stub; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#203
  def remove_stub_if_present; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#121
  def reset; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#85
  def restore_original_method; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#108
  def restore_original_visibility; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#21
  def save_original_implementation_callable!; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#182
  def setup_simple_method_double(method_name, response, collection, error_generator = T.unsafe(nil), backtrace_line = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#97
  def show_frozen_warning; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#6
  def stubs; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#116
  def verify; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#41
  def visibility; end

  private

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#230
  def definition_target; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#250
  def new_rspec_prepended_module; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#268
  def remove_method_from_definition_target; end

  # source://rspec-mocks//lib/rspec/mocks/method_double.rb#234
  def usable_rspec_prepended_module; end
end

# We subclass `Module` in order to be able to easily detect our prepended module.
class RSpec::Mocks::MethodDouble::RSpecPrependedModule < ::Module; end

# Represents a method on an object that may or may not be defined.
# The method may be an instance method on a module or a method on
# any object.
#
# @private
class RSpec::Mocks::MethodReference
  # @return [MethodReference] a new instance of MethodReference
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#15
  def initialize(object_reference, method_name); end

  # A method is defined if we are able to get a `Method` object for it.
  # In that case, we can assert against metadata like the arity.
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#46
  def defined?; end

  # A method is implemented if sending the message does not result in
  # a `NoMethodError`. It might be dynamically implemented by
  # `method_missing`.
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#23
  def implemented?; end

  # Returns true if we definitively know that sending the method
  # will result in a `NoMethodError`.
  #
  # This is not simply the inverse of `implemented?`: there are
  # cases when we don't know if a method is implemented and
  # both `implemented?` and `unimplemented?` will return false.
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#35
  def unimplemented?; end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#57
  def visibility; end

  # @yield [Support::MethodSignature.new(original)]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#52
  def with_signature; end

  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#105
  def original_method; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#11
    def for(object_reference, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#67
    def instance_method_visibility_for(klass, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#67
    def method_defined_at_any_visibility?(klass, method_name); end

    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#81
    def method_visibility_for(object, method_name); end
  end
end

# Raised when an expectation customization method (e.g. `with`,
# `and_return`) is called on a message expectation which has already been
# invoked.
class RSpec::Mocks::MockExpectationAlreadyInvokedError < ::Exception; end

# Raised when a message expectation is not satisfied.
class RSpec::Mocks::MockExpectationError < ::Exception; end

# An implementation of rspec-mocks' reference interface.
# Used when a string is passed to {ExampleMethods#object_double},
# and when a string, named class or named module is passed to
# {ExampleMethods#instance_double}, or {ExampleMethods#class_double}.
# Represents a reference to the object named (via a constant lookup)
# by the string.
#
# @see DirectObjectReference
class RSpec::Mocks::NamedObjectReference
  # @param const_name [String] constant name
  # @return [NamedObjectReference] a new instance of NamedObjectReference
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#111
  def initialize(const_name); end

  # @return [String] the constant name to replace with a double.
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#121
  def const_to_replace; end

  # @return [Boolean] true if the named constant is defined, false otherwise.
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#116
  def defined?; end

  # @return [String] the constant name to replace with a double.
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#121
  def description; end

  # @return [Object, nil] the target of the verifying double (the named object), or
  #   nil if it is not defined.
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#128
  def target; end

  # Yields if the reference target is loaded, providing a generic mechanism
  # to optionally run a bit of code only when a reference's target is
  # loaded.
  #
  # @yield [Object] the target object
  #
  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#137
  def when_loaded; end

  private

  # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#143
  def object; end
end

# @private
class RSpec::Mocks::NegationUnsupportedError < ::StandardError; end

# @private
class RSpec::Mocks::NestedSpace < ::RSpec::Mocks::Space
  # @return [NestedSpace] a new instance of NestedSpace
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#210
  def initialize(parent); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#219
  def constant_mutator_for(name); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#215
  def proxies_of(klass); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#223
  def registered?(object); end

  private

  # source://rspec-mocks//lib/rspec/mocks/space.rb#233
  def any_instance_recorder_not_found_for(id, klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#229
  def proxy_not_found_for(id, object); end
end

# @private
class RSpec::Mocks::NoCallbackInvocationStrategy
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#17
  def call(_doubled_module); end
end

# @private
class RSpec::Mocks::ObjectMethodReference < ::RSpec::Mocks::MethodReference
  private

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#168
  def find_method(object); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#164
  def method_defined?(object); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#160
  def method_implemented?(object); end

  # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#172
  def visibility_from(object); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/method_reference.rb#150
    def for(object_reference, method_name); end
  end
end

# @private
class RSpec::Mocks::ObjectReference
  class << self
    # Returns an appropriate Object or Module reference based
    # on the given argument.
    #
    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#7
    def for(object_module_or_name, allow_direct_object_refs = T.unsafe(nil)); end

    private

    # 1.8.7
    #
    # @return [Boolean]
    #
    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#31
    def anonymous_module?(mod); end

    # source://rspec-mocks//lib/rspec/mocks/object_reference.rb#41
    def name_of(mod); end
  end
end

# @private
#
# source://rspec-mocks//lib/rspec/mocks/object_reference.rb#47
RSpec::Mocks::ObjectReference::MODULE_NAME_METHOD = T.let(T.unsafe(nil), UnboundMethod)

# Similar to an InstanceVerifyingDouble, except that it verifies against
# public methods of the given object.
#
# @private
class RSpec::Mocks::ObjectVerifyingDouble
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble
  include ::RSpec::Mocks::ObjectVerifyingDoubleMethods
end

# An awkward module necessary because we cannot otherwise have
# ClassVerifyingDouble inherit from Module and still share these methods.
#
# @private
module RSpec::Mocks::ObjectVerifyingDoubleMethods
  include ::RSpec::Mocks::TestDouble
  include ::RSpec::Mocks::VerifyingDouble

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#89
  def as_stubbed_const(options = T.unsafe(nil)); end

  private

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#96
  def __build_mock_proxy(order_group); end
end

# @private
class RSpec::Mocks::OrderGroup
  # @return [OrderGroup] a new instance of OrderGroup
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#5
  def initialize; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#48
  def clear; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#26
  def consume; end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#54
  def empty?; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#37
  def handle_order_constraint(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#16
  def invoked(message); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#21
  def ready_for?(expectation); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#12
  def register(expectation); end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#43
  def verify_invocation_order(expectation); end

  private

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#76
  def expectation_for(message); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#64
  def expectations_invoked_in_order?; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#72
  def expected_invocations; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#68
  def invoked_expectations; end

  # source://rspec-mocks//lib/rspec/mocks/order_group.rb#60
  def remaining_expectations; end
end

# Raised when doubles or partial doubles are used outside of the per-test lifecycle.
class RSpec::Mocks::OutsideOfExampleError < ::StandardError; end

# @private
class RSpec::Mocks::PartialClassDoubleProxy < ::RSpec::Mocks::PartialDoubleProxy
  include ::RSpec::Mocks::PartialClassDoubleProxyMethods
end

# When we mock or stub a method on a class, we have to treat it a bit different,
# because normally singleton method definitions only affect the object on which
# they are defined, but on classes they affect subclasses, too. As a result,
# we need some special handling to get the original method.
#
# @private
module RSpec::Mocks::PartialClassDoubleProxyMethods
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#389
  def initialize(source_space, *args); end

  # Consider this situation:
  #
  #   class A; end
  #   class B < A; end
  #
  #   allow(A).to receive(:new)
  #   expect(B).to receive(:new).and_call_original
  #
  # When getting the original definition for `B.new`, we cannot rely purely on
  # using `B.method(:new)` before our redefinition is defined on `B`, because
  # `B.method(:new)` will return a method that will execute the stubbed version
  # of the method on `A` since singleton methods on classes are in the lookup
  # hierarchy.
  #
  # To do it properly, we need to find the original definition of `new` from `A`
  # from _before_ `A` was stubbed, and we need to rebind it to `B` so that it will
  # run with the proper `self`.
  #
  # That's what this method (together with `original_unbound_method_handle_from_ancestor_for`)
  # does.
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#414
  def original_method_handle_for(message); end

  protected

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#442
  def method_double_from_ancestor_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#437
  def original_unbound_method_handle_from_ancestor_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#452
  def superclass_proxy; end
end

# @private
class RSpec::Mocks::PartialDoubleProxy < ::RSpec::Mocks::Proxy
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#339
  def add_simple_expectation(method_name, response, location); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#345
  def add_simple_stub(method_name, response); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#362
  def message_received(message, *args, **_arg2, &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#326
  def original_method_handle_for(message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#357
  def reset; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#351
  def visibility_for(method_name); end

  private

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#372
  def any_instance_class_recorder_observing_method?(klass, method_name); end
end

# @private
class RSpec::Mocks::Proxy
  # @private
  # @return [Proxy] a new instance of Proxy
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#23
  def initialize(object, order_group, options = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#74
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#88
  def add_simple_expectation(method_name, response, location); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#149
  def add_simple_stub(method_name, response); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#143
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # Tells the object to ignore any messages that aren't explicitly set as
  # stubs or message expectations.
  #
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#61
  def as_null_object; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#93
  def build_expectation(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#126
  def check_for_unexpected_arguments(expectation); end

  # @private
  # @raise [ArgumentError]
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#37
  def ensure_can_be_proxied!(object); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#18
  def ensure_implemented(*_args); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#190
  def has_negative_expectation?(message); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#203
  def message_received(message, *args, **_arg2, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#183
  def messages_arg_list; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#268
  def method_double_if_exists_for_message(message); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#54
  def null_object?; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#51
  def object; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#67
  def original_method_handle_for(_message); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#262
  def prepended_modules_of_singleton_class; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#241
  def raise_missing_default_stub_error(expectation, args_for_multiple_calls); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#236
  def raise_unexpected_message_error(method_name, args); end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#176
  def received_message?(method_name, *args, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#195
  def record_message_received(message, *args, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#154
  def remove_stub(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#159
  def remove_stub_if_present(method_name); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#103
  def replay_received_message_on(expectation, &block); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#169
  def reset; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#164
  def verify; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#246
  def visibility_for(_method_name); end

  private

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#285
  def find_almost_matching_expectation(method_name, *args, **_arg2); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#309
  def find_almost_matching_stub(method_name, *args, **_arg2); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#292
  def find_best_matching_expectation_for(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#278
  def find_matching_expectation(method_name, *args, **_arg2); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#304
  def find_matching_method_stub(method_name, *args, **_arg2); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#274
  def method_double_for(message); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/proxy.rb#252
    def prepended_modules_of(klass); end
  end
end

# source://rspec-mocks//lib/rspec/mocks/proxy.rb#71
RSpec::Mocks::Proxy::DEFAULT_MESSAGE_EXPECTATION_OPTS = T.let(T.unsafe(nil), Hash)

# @private
class RSpec::Mocks::Proxy::SpecificMessage < ::Struct
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#7
  def ==(expectation); end

  # Returns the value of attribute args
  #
  # @return [Object] the current value of args
  def args; end

  # Sets the attribute args
  #
  # @param value [Object] the value to set the attribute args to.
  # @return [Object] the newly set value
  def args=(_); end

  # Returns the value of attribute message
  #
  # @return [Object] the current value of message
  def message; end

  # Sets the attribute message
  #
  # @param value [Object] the value to set the attribute message to.
  # @return [Object] the newly set value
  def message=(_); end

  # Returns the value of attribute object
  #
  # @return [Object] the current value of object
  def object; end

  # Sets the attribute object
  #
  # @param value [Object] the value to set the attribute object to.
  # @return [Object] the newly set value
  def object=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# @private
class RSpec::Mocks::ProxyForNil < ::RSpec::Mocks::PartialDoubleProxy
  # @return [ProxyForNil] a new instance of ProxyForNil
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#470
  def initialize(order_group); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#478
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#483
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # Returns the value of attribute disallow_expectations.
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#475
  def disallow_expectations; end

  # Sets the attribute disallow_expectations
  #
  # @param value the value to set the attribute disallow_expectations to.
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#475
  def disallow_expectations=(_arg0); end

  # Returns the value of attribute warn_about_expectations.
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#476
  def warn_about_expectations; end

  # Sets the attribute warn_about_expectations
  #
  # @param value the value to set the attribute warn_about_expectations to.
  #
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#476
  def warn_about_expectations=(_arg0); end

  private

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#520
  def raise_error(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#490
  def set_expectation_behavior; end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#515
  def warn(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#504
  def warn_or_raise!(method_name); end
end

# Provides a default space implementation for outside
# the scope of an example. Called "root" because it serves
# as the root of the space stack.
#
# @private
class RSpec::Mocks::RootSpace
  # source://rspec-mocks//lib/rspec/mocks/space.rb#18
  def any_instance_proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#14
  def any_instance_recorder_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#26
  def any_instance_recorders_from_ancestry_of(_object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#44
  def new_scope; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#10
  def proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#22
  def register_constant_mutator(_mutator); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#36
  def registered?(_object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#30
  def reset_all; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#40
  def superclass_proxy_for(*_args); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#33
  def verify_all; end

  private

  # @raise [OutsideOfExampleError]
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#50
  def raise_lifecycle_message; end
end

# A message expectation that only allows concrete return values to be set
# for a message. While this same effect can be achieved using a standard
# MessageExpectation, this version is much faster and so can be used as an
# optimization.
#
# @private
class RSpec::Mocks::SimpleMessageExpectation
  # @return [SimpleMessageExpectation] a new instance of SimpleMessageExpectation
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#12
  def initialize(message, response, error_generator, backtrace_line = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#26
  def called_max_times?; end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#17
  def invoke(*_); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#22
  def matches?(message, *_); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#37
  def unadvise(_); end

  # source://rspec-mocks//lib/rspec/mocks/message_expectation.rb#30
  def verify_messages_received; end
end

# @private
class RSpec::Mocks::Space
  # @return [Space] a new instance of Space
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#60
  def initialize; end

  # Returns the value of attribute any_instance_mutex.
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def any_instance_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#103
  def any_instance_proxy_for(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#93
  def any_instance_recorder_for(klass, only_return_existing = T.unsafe(nil)); end

  # Returns the value of attribute any_instance_recorders.
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def any_instance_recorders; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#131
  def any_instance_recorders_from_ancestry_of(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#89
  def constant_mutator_for(name); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#111
  def ensure_registered(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#69
  def new_scope; end

  # Returns the value of attribute proxies.
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def proxies; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#107
  def proxies_of(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#111
  def proxy_for(object); end

  # Returns the value of attribute proxy_mutex.
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#58
  def proxy_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#85
  def register_constant_mutator(mutator); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/space.rb#127
  def registered?(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#78
  def reset_all; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#118
  def superclass_proxy_for(klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#73
  def verify_all; end

  private

  # source://rspec-mocks//lib/rspec/mocks/space.rb#184
  def any_instance_recorder_not_found_for(id, klass); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#171
  def class_proxy_with_callback_verification_strategy(object, strategy); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#202
  def id_for(object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#147
  def new_mutex; end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#151
  def proxy_not_found_for(id, object); end

  # source://rspec-mocks//lib/rspec/mocks/space.rb#166
  def superclass_proxy_not_found_for(id, object); end
end

# @private
class RSpec::Mocks::StubChain < ::RSpec::Mocks::MessageChain
  private

  # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#82
  def expectation(object, message, &return_block); end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/message_chain.rb#76
    def stub_chain_on(object, *chain, &blk); end
  end
end

# Provides methods for enabling and disabling the available syntaxes
# provided by rspec-mocks.
#
# @api private
module RSpec::Mocks::Syntax
  class << self
    # Determines where the methods like `should_receive`, and `stub` are added.
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#181
    def default_should_syntax_host; end

    # Disables the expect syntax (`expect(dbl).to receive`, `allow(dbl).to receive`, etc).
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#150
    def disable_expect(syntax_host = T.unsafe(nil)); end

    # Disables the should syntax (`dbl.stub`, `dbl.should_receive`, etc).
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#89
    def disable_should(syntax_host = T.unsafe(nil)); end

    # Enables the expect syntax (`expect(dbl).to receive`, `allow(dbl).to receive`, etc).
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#110
    def enable_expect(syntax_host = T.unsafe(nil)); end

    # Enables the should syntax (`dbl.stub`, `dbl.should_receive`, etc).
    #
    # @api private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#26
    def enable_should(syntax_host = T.unsafe(nil)); end

    # Indicates whether or not the expect syntax is enabled.
    #
    # @api private
    # @return [Boolean]
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#175
    def expect_enabled?(syntax_host = T.unsafe(nil)); end

    # Indicates whether or not the should syntax is enabled.
    #
    # @api private
    # @return [Boolean]
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#169
    def should_enabled?(syntax_host = T.unsafe(nil)); end

    # @api private
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#8
    def warn_about_should!; end

    # @api private
    # @private
    #
    # source://rspec-mocks//lib/rspec/mocks/syntax.rb#13
    def warn_unless_should_configured(method_name, replacement = T.unsafe(nil)); end
  end
end

# @private
class RSpec::Mocks::TargetBase
  include ::RSpec::Mocks::TargetDelegationInstanceMethods
  extend ::RSpec::Mocks::TargetDelegationClassMethods

  # @return [TargetBase] a new instance of TargetBase
  #
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#64
  def initialize(target); end
end

# @private
module RSpec::Mocks::TargetDelegationClassMethods
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#14
  def delegate_not_to(matcher_method, options = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#5
  def delegate_to(matcher_method); end

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#28
  def disallow_negation(method_name); end
end

# @private
module RSpec::Mocks::TargetDelegationInstanceMethods
  # Returns the value of attribute target.
  #
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#37
  def target; end

  private

  # source://rspec-mocks//lib/rspec/mocks/targets.rb#45
  def define_matcher(matcher, name, &block); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#41
  def matcher_allowed?(matcher); end

  # @raise [NegationUnsupportedError]
  #
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#55
  def raise_negation_unsupported(method_name, matcher); end

  # @raise [UnsupportedMatcherError]
  #
  # source://rspec-mocks//lib/rspec/mocks/targets.rb#49
  def raise_unsupported_matcher(method_name, matcher); end
end

# Implements the methods needed for a pure test double.  RSpec::Mocks::Double
# includes this module, and it is provided for cases where you want a
# pure test double without subclassing RSpec::Mocks::Double.
module RSpec::Mocks::TestDouble
  # Creates a new test double with a `name` (that will be used in error
  # messages only)
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#9
  def initialize(name = T.unsafe(nil), stubs = T.unsafe(nil)); end

  # This allows for comparing the mock to other objects that proxy such as
  # ActiveRecords belongs_to proxy objects. By making the other object run
  # the comparison, we're sure the call gets delegated to the proxy
  # target.
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#36
  def ==(other); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#56
  def __build_mock_proxy_unless_expired(order_group); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#61
  def __disallow_further_usage!; end

  # Tells the object to respond to all messages. If specific stub values
  # are declared, they'll work as expected. If not, the receiver is
  # returned.
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#23
  def as_null_object; end

  # Override for default freeze implementation to prevent freezing of test
  # doubles.
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#67
  def freeze; end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#41
  def inspect; end

  # Returns true if this object has received `as_null_object`
  #
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#28
  def null_object?; end

  # @private
  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#51
  def respond_to?(message, incl_private = T.unsafe(nil)); end

  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#46
  def to_s; end

  private

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#115
  def __build_mock_proxy(order_group); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#111
  def __mock_proxy; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#119
  def __raise_expired_error; end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#105
  def assign_stubs(stubs); end

  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#124
  def initialize_copy(other); end

  # @raise [NoMethodError]
  #
  # source://rspec-mocks//lib/rspec/mocks/test_double.rb#74
  def method_missing(message, *args, &block); end
end

# @private
module RSpec::Mocks::TestDoubleFormatter
  class << self
    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#138
    def format(dbl, unwrap = T.unsafe(nil)); end

    private

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#164
    def name_desc(dbl); end

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#147
    def type_desc(dbl); end

    # source://rspec-mocks//lib/rspec/mocks/test_double.rb#159
    def verified_module_desc(dbl); end
  end
end

# @private
class RSpec::Mocks::TestDoubleProxy < ::RSpec::Mocks::Proxy
  # source://rspec-mocks//lib/rspec/mocks/proxy.rb#317
  def reset; end
end

# @private
class RSpec::Mocks::UnsupportedMatcherError < ::StandardError; end

# @private
module RSpec::Mocks::VerifyingDouble
  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#51
  def initialize(doubled_module, *args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#39
  def __send__(name, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#20
  def method_missing(message, *args, &block); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#7
  def respond_to?(message, include_private = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_double.rb#47
  def send(name, *args, &block); end
end

# @private
class RSpec::Mocks::VerifyingDoubleNotDefinedError < ::StandardError; end

# Used in place of a `VerifyingExistingMethodDouble` for the specific case
# of mocking or stubbing a `new` method on a class. In this case, we substitute
# the method signature from `#initialize` since new's signature is just `*args`.
#
# @private
class RSpec::Mocks::VerifyingExistingClassNewMethodDouble < ::RSpec::Mocks::VerifyingExistingMethodDouble
  # @yield [Support::MethodSignature.new(object.instance_method(:initialize))]
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#215
  def with_signature; end
end

# A VerifyingMethodDouble fetches the method to verify against from the
# original object, using a MethodReference. This works for pure doubles,
# but when the original object is itself the one being modified we need to
# collapse the reference and the method double into a single object so that
# we can access the original pristine method definition.
#
# @private
class RSpec::Mocks::VerifyingExistingMethodDouble < ::RSpec::Mocks::VerifyingMethodDouble
  # @return [VerifyingExistingMethodDouble] a new instance of VerifyingExistingMethodDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#180
  def initialize(object, method_name, proxy); end

  # @return [Boolean]
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#194
  def unimplemented?; end

  # @yield [Support::MethodSignature.new(original_implementation_callable)]
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#190
  def with_signature; end

  class << self
    # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#198
    def for(object, method_name, proxy); end
  end
end

# A message expectation that knows about the real implementation of the
# message being expected, so that it can verify that any expectations
# have the valid arguments.
#
# @api private
class RSpec::Mocks::VerifyingMessageExpectation < ::RSpec::Mocks::MessageExpectation
  # @api private
  # @return [VerifyingMessageExpectation] a new instance of VerifyingMessageExpectation
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#20
  def initialize(*args); end

  # A level of indirection is used here rather than just passing in the
  # method itself, since method look up is expensive and we only want to
  # do it if actually needed.
  #
  # Conceptually the method reference makes more sense as a constructor
  # argument since it should be immutable, but it is significantly more
  # straight forward to build the object in pieces so for now it stays as
  # an accessor.
  #
  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#18
  def method_reference; end

  # A level of indirection is used here rather than just passing in the
  # method itself, since method look up is expensive and we only want to
  # do it if actually needed.
  #
  # Conceptually the method reference makes more sense as a constructor
  # argument since it should be immutable, but it is significantly more
  # straight forward to build the object in pieces so for now it stays as
  # an accessor.
  #
  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#18
  def method_reference=(_arg0); end

  # @api private
  # @private
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#25
  def with(*args, **_arg1, &block); end

  private

  # @api private
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_message_expectation.rb#38
  def validate_expected_arguments!; end
end

# @private
class RSpec::Mocks::VerifyingMethodDouble < ::RSpec::Mocks::MethodDouble
  # @return [VerifyingMethodDouble] a new instance of VerifyingMethodDouble
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#140
  def initialize(object, method_name, proxy, method_reference); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#149
  def add_expectation(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#154
  def add_stub(*args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#145
  def message_expectation_class; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#159
  def proxy_method_invoked(obj, *args, &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#164
  def validate_arguments!(actual_args); end
end

# @private
class RSpec::Mocks::VerifyingPartialClassDoubleProxy < ::RSpec::Mocks::VerifyingPartialDoubleProxy
  include ::RSpec::Mocks::PartialClassDoubleProxyMethods
end

# @private
class RSpec::Mocks::VerifyingPartialDoubleProxy < ::RSpec::Mocks::PartialDoubleProxy
  include ::RSpec::Mocks::VerifyingProxyMethods

  # @return [VerifyingPartialDoubleProxy] a new instance of VerifyingPartialDoubleProxy
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#110
  def initialize(object, expectation_ordering, optional_callback_invocation_strategy = T.unsafe(nil)); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#123
  def ensure_implemented(_method_name); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#128
  def method_reference; end
end

# A verifying proxy mostly acts like a normal proxy, except that it
# contains extra logic to try and determine the validity of any expectation
# set on it. This includes whether or not methods have been defined and the
# validatiy of arguments on method calls.
#
# In all other ways this behaves like a normal proxy. It only adds the
# verification behaviour to specific methods then delegates to the parent
# implementation.
#
# These checks are only activated if the doubled class has already been
# loaded, otherwise they are disabled. This allows for testing in
# isolation.
#
# @private
class RSpec::Mocks::VerifyingProxy < ::RSpec::Mocks::TestDoubleProxy
  include ::RSpec::Mocks::VerifyingProxyMethods

  # @return [VerifyingProxy] a new instance of VerifyingProxy
  #
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#74
  def initialize(object, order_group, doubled_module, method_reference_class); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#88
  def method_reference; end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#98
  def validate_arguments!(method_name, args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#94
  def visibility_for(method_name); end
end

# @private
module RSpec::Mocks::VerifyingProxyMethods
  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#33
  def add_message_expectation(method_name, opts = T.unsafe(nil), &block); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#28
  def add_simple_stub(method_name, *args); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#23
  def add_stub(method_name, opts = T.unsafe(nil), &implementation); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#38
  def ensure_implemented(method_name); end

  # source://rspec-mocks//lib/rspec/mocks/verifying_proxy.rb#48
  def ensure_publicly_implemented(method_name, _object); end
end

# Version information for RSpec mocks.
module RSpec::Mocks::Version; end

# Version of RSpec mocks currently in use in SemVer format.
#
# source://rspec-mocks//lib/rspec/mocks/version.rb#6
RSpec::Mocks::Version::STRING = T.let(T.unsafe(nil), String)

# source://rspec-core/3.12.0/lib/rspec/core/shared_context.rb#54
RSpec::SharedContext = RSpec::Core::SharedContext

module RSpec::Support
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support.rb#84
    def class_of(object); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#14
    def define_optimized_require_for_rspec(lib, &require_relative); end

    # source://rspec-support/3.12.0/lib/rspec/support/matcher_definition.rb#22
    def deregister_matcher_definition(&block); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#105
    def failure_notifier; end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#97
    def failure_notifier=(callable); end

    # source://rspec-support/3.12.0/lib/rspec/support/matcher_definition.rb#27
    def is_a_matcher?(object); end

    # source://rspec-support/3.12.0/lib/rspec/support/matcher_definition.rb#4
    def matcher_definitions; end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#52
    def method_handle_for(object, method_name); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#110
    def notify_failure(failure, options = T.unsafe(nil)); end

    # source://rspec-support/3.12.0/lib/rspec/support/matcher_definition.rb#14
    def register_matcher_definition(&block); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#23
    def require_rspec_core(f); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#23
    def require_rspec_mocks(f); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#23
    def require_rspec_support(f); end

    # source://rspec-support/3.12.0/lib/rspec/support/matcher_definition.rb#34
    def rspec_description_for_object(object); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#92
    def thread_local_data; end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#132
    def warning_notifier; end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#125
    def warning_notifier=(_arg0); end

    # source://rspec-support/3.12.0/lib/rspec/support.rb#115
    def with_failure_notifier(callable); end
  end
end

module RSpec::Support::AllExceptionsExceptOnesWeMustNotRescue
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support.rb#142
    def ===(exception); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support.rb#140
RSpec::Support::AllExceptionsExceptOnesWeMustNotRescue::AVOID_RESCUING = T.let(T.unsafe(nil), Array)

class RSpec::Support::BlockSignature < ::RSpec::Support::MethodSignature
  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#268
  def classify_parameters; end
end

class RSpec::Support::ComparableVersion
  include ::Comparable

  # source://rspec-support/3.12.0/lib/rspec/support/comparable_version.rb#9
  def initialize(string); end

  # source://rspec-support/3.12.0/lib/rspec/support/comparable_version.rb#13
  def <=>(other); end

  # source://rspec-support/3.12.0/lib/rspec/support/comparable_version.rb#35
  def segments; end

  # source://rspec-support/3.12.0/lib/rspec/support/comparable_version.rb#7
  def string; end
end

# source://rspec-support/3.12.0/lib/rspec/support.rb#102
RSpec::Support::DEFAULT_FAILURE_NOTIFIER = T.let(T.unsafe(nil), Proc)

# source://rspec-support/3.12.0/lib/rspec/support.rb#129
RSpec::Support::DEFAULT_WARNING_NOTIFIER = T.let(T.unsafe(nil), Proc)

class RSpec::Support::Differ
  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#67
  def initialize(opts = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#63
  def color?; end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#11
  def diff(actual, expected); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#57
  def diff_as_object(actual, expected); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#28
  def diff_as_string(actual, expected); end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#128
  def add_old_hunk_to_hunk(hunk, oldhunk); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#124
  def add_to_output(output, string); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#78
  def all_strings?(*args); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#82
  def any_multiline_strings?(*args); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#153
  def blue(text); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#115
  def build_hunks(actual, expected); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#90
  def coerce_to_string(string_or_array); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#141
  def color(text, color_code); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#161
  def color_diff(diff); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#95
  def diffably_stringify(array); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#119
  def finalize_output(output, final_line); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#137
  def format_type; end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#149
  def green(text); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#202
  def handle_encoding_errors(actual, expected); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#192
  def hash_to_string(hash); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#106
  def multiline?(string); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#86
  def no_numbers?(*args); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#74
  def no_procs?(*args); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#157
  def normal(text); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#178
  def object_to_string(object); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#145
  def red(text); end

  # source://rspec-support/3.12.0/lib/rspec/support/differ.rb#132
  def safely_flatten(array); end
end

class RSpec::Support::DirectoryMaker
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/directory_maker.rb#13
    def mkdir_p(path); end

    private

    # source://rspec-support/3.12.0/lib/rspec/support/directory_maker.rb#55
    def directory_exists?(dirname); end

    # source://rspec-support/3.12.0/lib/rspec/support/directory_maker.rb#50
    def generate_path(stack, part); end

    # source://rspec-support/3.12.0/lib/rspec/support/directory_maker.rb#47
    def generate_stack(path); end
  end
end

class RSpec::Support::EncodedString
  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#14
  def initialize(string, encoding = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#26
  def <<(string); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#23
  def ==(*args, &block); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#23
  def empty?(*args, &block); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#23
  def encoding(*args, &block); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#23
  def eql?(*args, &block); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#23
  def lines(*args, &block); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#19
  def source_encoding; end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#39
  def split(regex_or_string); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#44
  def to_s; end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#44
  def to_str; end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#137
  def detect_source_encoding(string); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#91
  def matching_encoding(string); end

  # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#122
  def remove_invalid_bytes(string); end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#141
    def pick_encoding(source_a, source_b); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#12
RSpec::Support::EncodedString::REPLACE = T.let(T.unsafe(nil), String)

# source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#7
RSpec::Support::EncodedString::US_ASCII = T.let(T.unsafe(nil), String)

# source://rspec-support/3.12.0/lib/rspec/support/encoded_string.rb#6
RSpec::Support::EncodedString::UTF_8 = T.let(T.unsafe(nil), String)

module RSpec::Support::FuzzyMatcher
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/fuzzy_matcher.rb#8
    def values_match?(expected, actual); end

    private

    # source://rspec-support/3.12.0/lib/rspec/support/fuzzy_matcher.rb#27
    def arrays_match?(expected_list, actual_list); end

    # source://rspec-support/3.12.0/lib/rspec/support/fuzzy_matcher.rb#36
    def hashes_match?(expected_hash, actual_hash); end
  end
end

class RSpec::Support::HunkGenerator
  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#8
  def initialize(actual, expected); end

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#13
  def hunks; end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#30
  def actual_lines; end

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#34
  def build_hunk(piece); end

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#42
  def context_lines; end

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#22
  def diffs; end

  # source://rspec-support/3.12.0/lib/rspec/support/hunk_generator.rb#26
  def expected_lines; end
end

# source://rspec-support/3.12.0/lib/rspec/support.rb#38
RSpec::Support::KERNEL_METHOD_METHOD = T.let(T.unsafe(nil), UnboundMethod)

class RSpec::Support::LooseSignatureVerifier < ::RSpec::Support::MethodSignatureVerifier
  private

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#394
  def split_args(*args); end
end

class RSpec::Support::LooseSignatureVerifier::SignatureWithKeywordArgumentsMatcher
  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#412
  def initialize(signature); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#432
  def has_kw_args_in?(args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#420
  def invalid_kw_args_from(_kw_args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#416
  def missing_kw_args_from(_kw_args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#424
  def non_kw_args_arity_description; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#428
  def valid_non_kw_args?(*args); end
end

class RSpec::Support::MethodSignature
  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#14
  def initialize(method); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#96
  def arbitrary_kw_args?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#36
  def classify_arity(arity = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#104
  def classify_parameters; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#90
  def could_contain_kw_args?(args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#49
  def description; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#82
  def has_kw_args_in?(args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#75
  def invalid_kw_args_from(given_kw_args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#12
  def max_non_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#12
  def min_non_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#71
  def missing_kw_args_from(given_kw_args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#21
  def non_kw_args_arity_description; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#12
  def optional_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#12
  def required_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#100
  def unlimited_args?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#29
  def valid_non_kw_args?(positional_arg_count, optional_max_arg_count = T.unsafe(nil)); end
end

# source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#160
RSpec::Support::MethodSignature::INFINITY = T.let(T.unsafe(nil), Float)

class RSpec::Support::MethodSignatureExpectation
  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#218
  def initialize; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#245
  def empty?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#229
  def expect_arbitrary_keywords; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#229
  def expect_arbitrary_keywords=(_arg0); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#229
  def expect_unlimited_arguments; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#229
  def expect_unlimited_arguments=(_arg0); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#227
  def keywords; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#252
  def keywords=(values); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#227
  def max_count; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#231
  def max_count=(number); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#227
  def min_count; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#238
  def min_count=(number); end
end

class RSpec::Support::MethodSignatureVerifier
  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#281
  def initialize(signature, args = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#324
  def error_message; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#279
  def kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#279
  def max_non_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#279
  def min_non_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#279
  def non_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#316
  def valid?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#288
  def with_expectation(expectation); end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#355
  def arbitrary_kw_args?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#351
  def invalid_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#347
  def missing_kw_args; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#363
  def split_args(*args); end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#359
  def unlimited_args?; end

  # source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#343
  def valid_non_kw_args?; end
end

class RSpec::Support::Mutex < ::Thread::Mutex
  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#68
    def new; end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#66
RSpec::Support::Mutex::NEW_MUTEX_METHOD = T.let(T.unsafe(nil), Method)

module RSpec::Support::OS
  private

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#12
  def windows?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#16
  def windows_file_path?; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#12
    def windows?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#16
    def windows_file_path?; end
  end
end

class RSpec::Support::ObjectFormatter
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#27
  def initialize(max_formatted_output_length = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#32
  def format(object); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#11
  def max_formatted_output_length; end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#11
  def max_formatted_output_length=(_arg0); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#68
  def prepare_array(array); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#92
  def prepare_element(element); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#56
  def prepare_for_inspection(object); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#74
  def prepare_hash(input_hash); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#111
  def recursive_structure?(object); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#84
  def sort_hash_keys(input_hash); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#104
  def with_entering_structure(structure); end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#266
  def truncate_string(str, start_index, end_index); end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#15
    def default_instance; end

    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#19
    def format(object); end

    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#23
    def prepare_for_inspection(object); end
  end
end

class RSpec::Support::ObjectFormatter::BaseInspector < ::Struct
  def formatter; end
  def formatter=(_); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#130
  def inspect; end

  def object; end
  def object=(_); end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#134
  def pretty_print(pp); end

  class << self
    def [](*_arg0); end

    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#126
    def can_inspect?(_object); end

    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Support::ObjectFormatter::BigDecimalInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#180
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#176
    def can_inspect?(object); end
  end
end

class RSpec::Support::ObjectFormatter::DateTimeInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#166
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#160
    def can_inspect?(object); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#158
RSpec::Support::ObjectFormatter::DateTimeInspector::FORMAT = T.let(T.unsafe(nil), String)

class RSpec::Support::ObjectFormatter::DelegatorInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#227
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#223
    def can_inspect?(object); end
  end
end

class RSpec::Support::ObjectFormatter::DescribableMatcherInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#190
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#186
    def can_inspect?(object); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#9
RSpec::Support::ObjectFormatter::ELLIPSIS = T.let(T.unsafe(nil), String)

# source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#245
RSpec::Support::ObjectFormatter::INSPECTOR_CLASSES = T.let(T.unsafe(nil), Array)

class RSpec::Support::ObjectFormatter::InspectableItem < ::Struct
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#116
  def inspect; end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#120
  def pretty_print(pp); end

  def text; end
  def text=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class RSpec::Support::ObjectFormatter::InspectableObjectInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#240
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#233
    def can_inspect?(object); end
  end
end

class RSpec::Support::ObjectFormatter::TimeInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#147
  def inspect; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#142
    def can_inspect?(object); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#140
RSpec::Support::ObjectFormatter::TimeInspector::FORMAT = T.let(T.unsafe(nil), String)

class RSpec::Support::ObjectFormatter::UninspectableObjectInspector < ::RSpec::Support::ObjectFormatter::BaseInspector
  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#205
  def inspect; end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#209
  def klass; end

  # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#214
  def native_object_id; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#198
    def can_inspect?(object); end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/object_formatter.rb#196
RSpec::Support::ObjectFormatter::UninspectableObjectInspector::OBJECT_ID_FORMAT = T.let(T.unsafe(nil), String)

module RSpec::Support::RecursiveConstMethods
  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#43
  def const_defined_on?(mod, const_name); end

  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#51
  def constants_defined_on(mod); end

  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#47
  def get_const_defined_on(mod, const_name); end

  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#71
  def normalize_const_name(const_name); end

  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#62
  def recursive_const_defined?(const_name); end

  # source://rspec-support/3.12.0/lib/rspec/support/recursive_const_methods.rb#56
  def recursive_const_get(const_name); end
end

class RSpec::Support::ReentrantMutex
  # source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#15
  def initialize; end

  # source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#21
  def synchronize; end

  private

  # source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#33
  def enter; end

  # source://rspec-support/3.12.0/lib/rspec/support/reentrant_mutex.rb#38
  def exit; end
end

module RSpec::Support::Ruby
  private

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#27
  def jruby?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#35
  def jruby_9000?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#31
  def jruby_version; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#47
  def mri?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#43
  def non_mri?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#39
  def rbx?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#51
  def truffleruby?; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#27
    def jruby?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#35
    def jruby_9000?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#31
    def jruby_version; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#47
    def mri?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#43
    def non_mri?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#39
    def rbx?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#51
    def truffleruby?; end
  end
end

module RSpec::Support::RubyFeatures
  private

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#83
  def caller_locations_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#132
  def distincts_kw_args_from_positional_hash?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#74
  def fork_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#137
  def kw_args_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#193
  def module_prepends_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#189
  def module_refinement_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#79
  def optional_and_splat_args_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#141
  def required_kw_args_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#123
  def ripper_supported?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#88
  def supports_exception_cause?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#145
  def supports_rebinding_module_methods?; end

  # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#98
  def supports_taint?; end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#83
    def caller_locations_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#132
    def distincts_kw_args_from_positional_hash?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#74
    def fork_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#137
    def kw_args_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#193
    def module_prepends_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#189
    def module_refinement_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#79
    def optional_and_splat_args_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#141
    def required_kw_args_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#123
    def ripper_supported?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#88
    def supports_exception_cause?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#145
    def supports_rebinding_module_methods?; end

    # source://rspec-support/3.12.0/lib/rspec/support/ruby_features.rb#98
    def supports_taint?; end
  end
end

# source://rspec-support/3.12.0/lib/rspec/support/method_signature_verifier.rb#385
RSpec::Support::StrictSignatureVerifier = RSpec::Support::MethodSignatureVerifier

module RSpec::Support::Version; end

# source://rspec-support/3.12.0/lib/rspec/support/version.rb#4
RSpec::Support::Version::STRING = T.let(T.unsafe(nil), String)

module RSpec::Support::Warnings
  # source://rspec-support/3.12.0/lib/rspec/support/warnings.rb#7
  def deprecate(deprecated, options = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/warnings.rb#15
  def warn_deprecation(message, options = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/warnings.rb#29
  def warn_with(message, options = T.unsafe(nil)); end

  # source://rspec-support/3.12.0/lib/rspec/support/warnings.rb#22
  def warning(text, options = T.unsafe(nil)); end
end

module RSpec::Support::WithKeywordsWhenNeeded
  private

  # source://rspec-support/3.12.0/lib/rspec/support/with_keywords_when_needed.rb#15
  def class_exec(klass, *args, **_arg2, &block); end

  class << self
    # source://rspec-support/3.12.0/lib/rspec/support/with_keywords_when_needed.rb#15
    def class_exec(klass, *args, **_arg2, &block); end
  end
end

module RSpec::Version; end

# source://rspec/3.12.0/lib/rspec/version.rb#3
RSpec::Version::STRING = T.let(T.unsafe(nil), String)
